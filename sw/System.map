
Allocating common symbols
Common symbol       size              file

_rx_level           0x4               uart.o
_tx_buff            0x20              uart.o
_tx_level           0x4               uart.o

Memory Configuration

Name             Origin             Length             Attributes
ld_info          0x01000000         0x000000f0
vectors          0x01000100         0x00000c00
flash            0x01000d00         0x00001600
ram              0x01003000         0x00fffff0
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD BootReset.o
LOAD main.o
LOAD uart.o
LOAD sd_controller.o

.vectors        0x01000100      0x900
 *(.vectors)
 .vectors       0x01000100      0x900 BootReset.o
                0x01000400                __exception_instruction_page_fault
                0x01000800                __external_IRQ
                0x01000200                __exception_bus_error
                0x01000300                __exception_data_page_fault
                0x01000600                __exception_unaligned_access
                0x01000700                __exception_illegal_instruction
                0x01000500                __exception_tick_timer

.text           0x01003000     0x1ddc
 *(.text)
 .text          0x01003000        0x0 BootReset.o
 .text          0x01003000      0xaa0 main.o
                0x010031a4                _external_exeption
                0x010031bc                _Start
                0x01003000                _Write_External_SDRAM_1
 .text          0x01003aa0      0x864 uart.o
                0x0100404c                _uart_print_short
                0x01003cac                _uart_putc
                0x01003eb0                _uart_print_long
                0x01003aa0                _uart_init
                0x01003e1c                _uart_print_str
                0x01004260                _uart_getc
 .text          0x01004304      0xad8 sd_controller.o
                0x01004770                _sd_controller_init
                0x01004304                _sd_get_rca
                0x0100457c                _sd_ocr_set
                0x01004480                _sd_wait_rsp

.rodata         0x01004ddc      0x162
 *(.rodata)
 .rodata        0x01004ddc      0x14c main.o
 .rodata        0x01004f28        0x1 uart.o
 .rodata        0x01004f29       0x15 sd_controller.o

.data           0x01004f3e        0x0
 *(.data)
 .data          0x01004f3e        0x0 BootReset.o
 .data          0x01004f3e        0x0 main.o
 .data          0x01004f3e        0x0 uart.o
 .data          0x01004f3e        0x0 sd_controller.o

.bss            0x01004f40       0x44
 *(.bss)
 .bss           0x01004f40        0x0 BootReset.o
 .bss           0x01004f40        0x0 main.o
 .bss           0x01004f40        0x0 uart.o
 .bss           0x01004f40        0x4 sd_controller.o
 *fill*         0x01004f44        0xc 00
 COMMON         0x01004f50       0x34 uart.o
                0x01004f50                _rx_level
                0x01004f60                _tx_buff
                0x01004f80                _tx_level

.stack          0x01004f84      0x500
                0x01004f84                __STACK_TOP = .
                0x01005484                . = (. + 0x500)
 *fill*         0x01004f84      0x500 00
                0x01005484                __STACK_BOTTOM = .
                0x01003000                __CODE_START = ADDR (.text)
                0x01004ddc                __CODE_END = (ADDR (.text) + SIZEOF (.text))
                0x01004f40                __DATA_START = ADDR (.bss)
                0x01004f84                __DATA_END = (ADDR (.bss) + SIZEOF (.bss))
OUTPUT(boot.or32 elf32-or32)

.stab           0x00000000     0x15c0
 .stab          0x00000000      0x834 main.o
 .stab          0x00000834      0x630 uart.o
 .stab          0x00000e64      0x75c sd_controller.o

.stabstr        0x00000000     0x1577
 .stabstr       0x00000000      0x991 main.o
 .stabstr       0x00000991      0x500 uart.o
 .stabstr       0x00000e91      0x6e6 sd_controller.o

.comment        0x00000000       0x36
 .comment       0x00000000       0x12 main.o
 .comment       0x00000012       0x12 uart.o
 .comment       0x00000024       0x12 sd_controller.o
00000000 t _reset
00000100 T __exception_bus_error
00000200 T __exception_data_page_fault
00000300 T __exception_instruction_page_fault
00000400 T __exception_tick_timer
00000500 T __exception_unaligned_access
00000600 T __exception_illegal_instruction
00000700 T __external_IRQ
00000724 t JUMP
00000740 t save_state
000007b8 t restore_state

boot.or32:     file format elf32-or32
boot.or32
architecture: or32, flags 0x00000113:
HAS_RELOC, EXEC_P, HAS_SYMS, D_PAGED
start address 0x01000100

Program Header:
    LOAD off    0x00000000 vaddr 0x01000000 paddr 0x01000000 align 2**13
         filesz 0x00000a00 memsz 0x00000a00 flags r-x
    LOAD off    0x00001000 vaddr 0x01003000 paddr 0x01003000 align 2**13
         filesz 0x00001f3e memsz 0x00002484 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00000900  01000100  01000100  00000100  2**8
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .text         00001ddc  01003000  01003000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  2 .rodata       00000162  01004ddc  01004ddc  00002ddc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000044  01004f40  01004f40  00002f3e  2**4
                  ALLOC
  4 .stack        00000500  01004f84  01004f84  00002f3e  2**0
                  ALLOC
  5 .stab         000015c0  00000000  00000000  00002f40  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .stabstr      00001577  00000000  00000000  00004500  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .comment      00000036  00000000  00000000  00005a77  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01003000 l    d  .text	00000000 .text
01004f40 l    d  .bss	00000000 .bss
01000100 l    d  .vectors	00000000 .vectors
01000100 l       .vectors	00000000 _reset
00003560 l       *ABS*	00000000 sp
01000840 l       .vectors	00000000 save_state
01000824 l       .vectors	00000000 JUMP
010008b8 l       .vectors	00000000 restore_state
00000000 l    df *ABS*	00000000 main.c
01003000 l    d  .text	00000000 .text
01004f40 l    d  .bss	00000000 .bss
01004ddc l    d  .rodata	00000000 .rodata
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 uart.c
01004f40 l    d  .bss	00000000 .bss
00000000 l    df *ABS*	00000000 sd_controller.c
01004f40 l    d  .bss	00000000 .bss
01004f40 l     O .bss	00000004 _rtn_r.1505
01004f84 l    d  .stack	00000000 .stack
01004ddc g       *ABS*	00000000 __CODE_END
01000400 g       .vectors	00000000 __exception_instruction_page_fault
01004770 g     F .text	0000066c _sd_controller_init
01000800 g       .vectors	00000000 __external_IRQ
0100404c g     F .text	00000214 _uart_print_short
01000200 g       .vectors	00000000 __exception_bus_error
01004f40 g       .bss	00000000 __DATA_START
01004f84 g       .stack	00000000 __STACK_TOP
01004304 g     F .text	0000017c _sd_get_rca
01005484 g       .stack	00000000 __STACK_BOTTOM
01003cac g     F .text	00000170 _uart_putc
010031a4 g     F .text	00000018 _external_exeption
01003eb0 g     F .text	0000019c _uart_print_long
01004f50 g     O .bss	00000004 _rx_level
01003aa0 g     F .text	0000020c _uart_init
01000300 g       .vectors	00000000 __exception_data_page_fault
01000600 g       .vectors	00000000 __exception_unaligned_access
01004f60 g     O .bss	00000020 _tx_buff
01000700 g       .vectors	00000000 __exception_illegal_instruction
01000500 g       .vectors	00000000 __exception_tick_timer
010031bc g     F .text	000008e4 _Start
01004f84 g       *ABS*	00000000 __DATA_END
01004f80 g     O .bss	00000004 _tx_level
01003000 g     F .text	000001a4 _Write_External_SDRAM_1
0100457c g     F .text	000001f4 _sd_ocr_set
01003000 g       .text	00000000 __CODE_START
01003e1c g     F .text	00000094 _uart_print_str
01004480 g     F .text	000000fc _sd_wait_rsp
01004260 g     F .text	000000a4 _uart_getc



Disassembly of section .vectors:

01000100 <_reset>:
 1000100:	18 00 00 00 	l.movhi r0,0x0
 1000104:	a8 00 00 00 	l.ori r0,r0,0x0
 1000108:	18 20 00 00 	l.movhi r1,0x0
 100010c:	a8 21 35 60 	l.ori r1,r1,0x3560
 1000110:	e0 40 00 04 	l.or r2,r0,r0
 1000114:	e0 60 00 04 	l.or r3,r0,r0
 1000118:	e0 80 00 04 	l.or r4,r0,r0
 100011c:	e0 a0 00 04 	l.or r5,r0,r0
 1000120:	e0 c0 00 04 	l.or r6,r0,r0
 1000124:	e0 e0 00 04 	l.or r7,r0,r0
 1000128:	e1 00 00 04 	l.or r8,r0,r0
 100012c:	e1 20 00 04 	l.or r9,r0,r0
 1000130:	e1 40 00 04 	l.or r10,r0,r0
 1000134:	e1 60 00 04 	l.or r11,r0,r0
 1000138:	e1 80 00 04 	l.or r12,r0,r0
 100013c:	e1 a0 00 04 	l.or r13,r0,r0
 1000140:	e1 c0 00 04 	l.or r14,r0,r0
 1000144:	e1 e0 00 04 	l.or r15,r0,r0
 1000148:	e2 00 00 04 	l.or r16,r0,r0
 100014c:	e2 20 00 04 	l.or r17,r0,r0
 1000150:	e2 40 00 04 	l.or r18,r0,r0
 1000154:	e2 60 00 04 	l.or r19,r0,r0
 1000158:	e2 80 00 04 	l.or r20,r0,r0
 100015c:	e2 a0 00 04 	l.or r21,r0,r0
 1000160:	e2 c0 00 04 	l.or r22,r0,r0
 1000164:	e2 e0 00 04 	l.or r23,r0,r0
 1000168:	e3 00 00 04 	l.or r24,r0,r0
 100016c:	e3 20 00 04 	l.or r25,r0,r0
 1000170:	e3 40 00 04 	l.or r26,r0,r0
 1000174:	e3 60 00 04 	l.or r27,r0,r0
 1000178:	e3 80 00 04 	l.or r28,r0,r0
 100017c:	e3 a0 00 04 	l.or r29,r0,r0
 1000180:	e3 c0 00 04 	l.or r30,r0,r0
 1000184:	e3 e0 00 04 	l.or r31,r0,r0
 1000188:	18 40 01 00 	l.movhi r2,0x100
 100018c:	a8 42 31 bc 	l.ori r2,r2,0x31bc
 1000190:	44 00 10 00 	l.jr r2
 1000194:	15 00 00 00 	l.nop 0x0
	...

01000200 <__exception_bus_error>:
 1000200:	00 00 00 00 	l.j 1000200 <__exception_bus_error>
 1000204:	15 00 00 00 	l.nop 0x0
	...

01000300 <__exception_data_page_fault>:
 1000300:	00 00 00 00 	l.j 1000300 <__exception_data_page_fault>
 1000304:	15 00 00 00 	l.nop 0x0
	...

01000400 <__exception_instruction_page_fault>:
 1000400:	00 00 00 00 	l.j 1000400 <__exception_instruction_page_fault>
 1000404:	15 00 00 00 	l.nop 0x0
	...

01000500 <__exception_tick_timer>:
 1000500:	00 00 00 00 	l.j 1000500 <__exception_tick_timer>
 1000504:	15 00 00 00 	l.nop 0x0
	...

01000600 <__exception_unaligned_access>:
 1000600:	00 00 00 00 	l.j 1000600 <__exception_unaligned_access>
 1000604:	15 00 00 00 	l.nop 0x0
	...

01000700 <__exception_illegal_instruction>:
 1000700:	00 00 00 00 	l.j 1000700 <__exception_illegal_instruction>
 1000704:	15 00 00 00 	l.nop 0x0
	...

01000800 <__external_IRQ>:
 1000800:	9c 21 ff 88 	l.addi r1,r1,0xffffff88
 1000804:	d4 01 48 1c 	l.sw 0x1c(r1),r9
 1000808:	04 00 00 0e 	l.jal 1000840 <save_state>
 100080c:	15 00 00 00 	l.nop 0x0
 1000810:	b4 60 00 40 	l.mfspr r3,r0,0x40
 1000814:	a4 83 00 04 	l.andi r4,r3,0x4
 1000818:	bc 04 00 00 	l.sfeqi r4,0x0
 100081c:	0c 00 00 02 	l.bnf 1000824 <JUMP>
 1000820:	15 00 00 00 	l.nop 0x0

01000824 <JUMP>:
 1000824:	04 00 0a 60 	l.jal 10031a4 <_external_exeption>
 1000828:	15 00 00 00 	l.nop 0x0
 100082c:	04 00 00 23 	l.jal 10008b8 <restore_state>
 1000830:	15 00 00 00 	l.nop 0x0
 1000834:	85 21 00 1c 	l.lwz r9,0x1c(r1)
 1000838:	9c 21 00 78 	l.addi r1,r1,0x78
 100083c:	24 00 00 00 	l.rfe 

01000840 <save_state>:
 1000840:	d4 01 10 00 	l.sw 0x0(r1),r2
 1000844:	d4 01 18 04 	l.sw 0x4(r1),r3
 1000848:	d4 01 20 08 	l.sw 0x8(r1),r4
 100084c:	d4 01 28 0c 	l.sw 0xc(r1),r5
 1000850:	d4 01 30 10 	l.sw 0x10(r1),r6
 1000854:	d4 01 38 14 	l.sw 0x14(r1),r7
 1000858:	d4 01 40 18 	l.sw 0x18(r1),r8
 100085c:	d4 01 50 20 	l.sw 0x20(r1),r10
 1000860:	d4 01 58 24 	l.sw 0x24(r1),r11
 1000864:	d4 01 60 28 	l.sw 0x28(r1),r12
 1000868:	d4 01 68 2c 	l.sw 0x2c(r1),r13
 100086c:	d4 01 70 30 	l.sw 0x30(r1),r14
 1000870:	d4 01 78 34 	l.sw 0x34(r1),r15
 1000874:	d4 01 80 38 	l.sw 0x38(r1),r16
 1000878:	d4 01 88 3c 	l.sw 0x3c(r1),r17
 100087c:	d4 01 90 40 	l.sw 0x40(r1),r18
 1000880:	d4 01 98 44 	l.sw 0x44(r1),r19
 1000884:	d4 01 a0 48 	l.sw 0x48(r1),r20
 1000888:	d4 01 a8 4c 	l.sw 0x4c(r1),r21
 100088c:	d4 01 b0 50 	l.sw 0x50(r1),r22
 1000890:	d4 01 b8 54 	l.sw 0x54(r1),r23
 1000894:	d4 01 c0 58 	l.sw 0x58(r1),r24
 1000898:	d4 01 c8 5c 	l.sw 0x5c(r1),r25
 100089c:	d4 01 d0 60 	l.sw 0x60(r1),r26
 10008a0:	d4 01 d8 64 	l.sw 0x64(r1),r27
 10008a4:	d4 01 e0 68 	l.sw 0x68(r1),r28
 10008a8:	d4 01 e8 6c 	l.sw 0x6c(r1),r29
 10008ac:	d4 01 f0 70 	l.sw 0x70(r1),r30
 10008b0:	44 00 48 00 	l.jr r9
 10008b4:	15 00 00 00 	l.nop 0x0

010008b8 <restore_state>:
 10008b8:	84 41 00 00 	l.lwz r2,0x0(r1)
 10008bc:	84 61 00 04 	l.lwz r3,0x4(r1)
 10008c0:	84 81 00 08 	l.lwz r4,0x8(r1)
 10008c4:	84 a1 00 0c 	l.lwz r5,0xc(r1)
 10008c8:	84 c1 00 10 	l.lwz r6,0x10(r1)
 10008cc:	84 e1 00 14 	l.lwz r7,0x14(r1)
 10008d0:	85 01 00 18 	l.lwz r8,0x18(r1)
 10008d4:	85 41 00 20 	l.lwz r10,0x20(r1)
 10008d8:	85 61 00 24 	l.lwz r11,0x24(r1)
 10008dc:	85 81 00 28 	l.lwz r12,0x28(r1)
 10008e0:	85 a1 00 2c 	l.lwz r13,0x2c(r1)
 10008e4:	85 c1 00 30 	l.lwz r14,0x30(r1)
 10008e8:	85 e1 00 34 	l.lwz r15,0x34(r1)
 10008ec:	86 01 00 38 	l.lwz r16,0x38(r1)
 10008f0:	86 21 00 3c 	l.lwz r17,0x3c(r1)
 10008f4:	86 41 00 40 	l.lwz r18,0x40(r1)
 10008f8:	86 61 00 44 	l.lwz r19,0x44(r1)
 10008fc:	86 81 00 48 	l.lwz r20,0x48(r1)
 1000900:	86 a1 00 4c 	l.lwz r21,0x4c(r1)
 1000904:	86 c1 00 50 	l.lwz r22,0x50(r1)
 1000908:	86 e1 00 54 	l.lwz r23,0x54(r1)
 100090c:	87 01 00 58 	l.lwz r24,0x58(r1)
 1000910:	87 21 00 5c 	l.lwz r25,0x5c(r1)
 1000914:	87 41 00 60 	l.lwz r26,0x60(r1)
 1000918:	87 61 00 64 	l.lwz r27,0x64(r1)
 100091c:	87 81 00 68 	l.lwz r28,0x68(r1)
 1000920:	87 a1 00 6c 	l.lwz r29,0x6c(r1)
 1000924:	87 c1 00 70 	l.lwz r30,0x70(r1)
 1000928:	44 00 48 00 	l.jr r9
 100092c:	15 00 00 00 	l.nop 0x0
	...

Disassembly of section .text:

01003000 <_Write_External_SDRAM_1>:
/*                        W R I T E  T O EXTERNAL SDRAM 1                     */
/******************************************************************************/

// Write to External SDRAM  
void Write_External_SDRAM_1(void)
{   
 1003000:	9c 21 ff 88 	l.addi r1,r1,0xffffff88
 1003004:	d4 01 10 00 	l.sw 0x0(r1),r2
 1003008:	9c 41 00 78 	l.addi r2,r1,0x78
   uint32      i;
   uint32      read;
   uint32      range;
   uint32      adr_offset;

   range      = 0x7ff;        // Max range: 0x7fffff
 100300c:	9c 60 07 ff 	l.addi r3,r0,0x7ff
 1003010:	d7 e2 1f d4 	l.sw 0xffffffd4(r2),r3
 1003014:	84 82 ff d4 	l.lwz r4,0xffffffd4(r2)
 1003018:	d7 e2 27 f8 	l.sw 0xfffffff8(r2),r4
   adr_offset = 0x00000000;  // External memory offset
 100301c:	9c 60 00 00 	l.addi r3,r0,0x0
 1003020:	d7 e2 1f fc 	l.sw 0xfffffffc(r2),r3
   
   for (i=0x0; i < range; i=i+4) {
 1003024:	9c 80 00 00 	l.addi r4,r0,0x0
 1003028:	d7 e2 27 f0 	l.sw 0xfffffff0(r2),r4
 100302c:	00 00 00 1e 	l.j 10030a4 <_Write_External_SDRAM_1+0xa4>
 1003030:	15 00 00 00 	l.nop 0x0
      REG32(adr_offset + i)   = (adr_offset + i);
 1003034:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1003038:	d7 e2 1f d0 	l.sw 0xffffffd0(r2),r3
 100303c:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 1003040:	d7 e2 27 cc 	l.sw 0xffffffcc(r2),r4
 1003044:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 1003048:	84 82 ff cc 	l.lwz r4,0xffffffcc(r2)
 100304c:	e0 63 20 00 	l.add r3,r3,r4
 1003050:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 1003054:	84 62 ff d8 	l.lwz r3,0xffffffd8(r2)
 1003058:	d7 e2 1f dc 	l.sw 0xffffffdc(r2),r3
 100305c:	84 82 ff fc 	l.lwz r4,0xfffffffc(r2)
 1003060:	d7 e2 27 c8 	l.sw 0xffffffc8(r2),r4
 1003064:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1003068:	d7 e2 1f c4 	l.sw 0xffffffc4(r2),r3
 100306c:	84 82 ff c8 	l.lwz r4,0xffffffc8(r2)
 1003070:	84 62 ff c4 	l.lwz r3,0xffffffc4(r2)
 1003074:	e0 84 18 00 	l.add r4,r4,r3
 1003078:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 100307c:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 1003080:	84 82 ff dc 	l.lwz r4,0xffffffdc(r2)
 1003084:	d4 04 18 00 	l.sw 0x0(r4),r3
   uint32      adr_offset;

   range      = 0x7ff;        // Max range: 0x7fffff
   adr_offset = 0x00000000;  // External memory offset
   
   for (i=0x0; i < range; i=i+4) {
 1003088:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 100308c:	d7 e2 27 c0 	l.sw 0xffffffc0(r2),r4
 1003090:	84 62 ff c0 	l.lwz r3,0xffffffc0(r2)
 1003094:	9c 63 00 04 	l.addi r3,r3,0x4
 1003098:	d7 e2 1f bc 	l.sw 0xffffffbc(r2),r3
 100309c:	84 82 ff bc 	l.lwz r4,0xffffffbc(r2)
 10030a0:	d7 e2 27 f0 	l.sw 0xfffffff0(r2),r4
 10030a4:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 10030a8:	d7 e2 1f b8 	l.sw 0xffffffb8(r2),r3
 10030ac:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 10030b0:	d7 e2 27 b4 	l.sw 0xffffffb4(r2),r4
 10030b4:	84 62 ff b8 	l.lwz r3,0xffffffb8(r2)
 10030b8:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 10030bc:	e4 83 20 00 	l.sfltu r3,r4
 10030c0:	13 ff ff dd 	l.bf 1003034 <_Write_External_SDRAM_1+0x34>
 10030c4:	15 00 00 00 	l.nop 0x0
      REG32(adr_offset + i)   = (adr_offset + i);
   }

   for (i=0x0; i < range; i=i+4) {
 10030c8:	9c 60 00 00 	l.addi r3,r0,0x0
 10030cc:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 10030d0:	00 00 00 29 	l.j 1003174 <_Write_External_SDRAM_1+0x174>
 10030d4:	15 00 00 00 	l.nop 0x0
     read = REG32(adr_offset + i);
 10030d8:	84 82 ff fc 	l.lwz r4,0xfffffffc(r2)
 10030dc:	d7 e2 27 b0 	l.sw 0xffffffb0(r2),r4
 10030e0:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 10030e4:	d7 e2 1f ac 	l.sw 0xffffffac(r2),r3
 10030e8:	84 82 ff b0 	l.lwz r4,0xffffffb0(r2)
 10030ec:	84 62 ff ac 	l.lwz r3,0xffffffac(r2)
 10030f0:	e0 84 18 00 	l.add r4,r4,r3
 10030f4:	d7 e2 27 e4 	l.sw 0xffffffe4(r2),r4
 10030f8:	84 82 ff e4 	l.lwz r4,0xffffffe4(r2)
 10030fc:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
 1003100:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1003104:	84 63 00 00 	l.lwz r3,0x0(r3)
 1003108:	d7 e2 1f a8 	l.sw 0xffffffa8(r2),r3
 100310c:	84 82 ff a8 	l.lwz r4,0xffffffa8(r2)
 1003110:	d7 e2 27 f4 	l.sw 0xfffffff4(r2),r4
     if (read != (adr_offset + i)) {
 1003114:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1003118:	d7 e2 1f a4 	l.sw 0xffffffa4(r2),r3
 100311c:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 1003120:	d7 e2 27 a0 	l.sw 0xffffffa0(r2),r4
 1003124:	84 62 ff a4 	l.lwz r3,0xffffffa4(r2)
 1003128:	84 82 ff a0 	l.lwz r4,0xffffffa0(r2)
 100312c:	e0 63 20 00 	l.add r3,r3,r4
 1003130:	d7 e2 1f ec 	l.sw 0xffffffec(r2),r3
 1003134:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003138:	d7 e2 1f 9c 	l.sw 0xffffff9c(r2),r3
 100313c:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 1003140:	84 62 ff 9c 	l.lwz r3,0xffffff9c(r2)
 1003144:	e4 04 18 00 	l.sfeq r4,r3
 1003148:	10 00 00 04 	l.bf 1003158 <_Write_External_SDRAM_1+0x158>
 100314c:	15 00 00 00 	l.nop 0x0
       while(TRUE){            //ERROR=HALT PROCESSOR 
       }       
 1003150:	00 00 00 00 	l.j 1003150 <_Write_External_SDRAM_1+0x150>
 1003154:	15 00 00 00 	l.nop 0x0
   
   for (i=0x0; i < range; i=i+4) {
      REG32(adr_offset + i)   = (adr_offset + i);
   }

   for (i=0x0; i < range; i=i+4) {
 1003158:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 100315c:	d7 e2 27 98 	l.sw 0xffffff98(r2),r4
 1003160:	84 62 ff 98 	l.lwz r3,0xffffff98(r2)
 1003164:	9c 63 00 04 	l.addi r3,r3,0x4
 1003168:	d7 e2 1f 94 	l.sw 0xffffff94(r2),r3
 100316c:	84 82 ff 94 	l.lwz r4,0xffffff94(r2)
 1003170:	d7 e2 27 f0 	l.sw 0xfffffff0(r2),r4
 1003174:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1003178:	d7 e2 1f 90 	l.sw 0xffffff90(r2),r3
 100317c:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 1003180:	d7 e2 27 8c 	l.sw 0xffffff8c(r2),r4
 1003184:	84 62 ff 90 	l.lwz r3,0xffffff90(r2)
 1003188:	84 82 ff 8c 	l.lwz r4,0xffffff8c(r2)
 100318c:	e4 83 20 00 	l.sfltu r3,r4
 1003190:	13 ff ff d2 	l.bf 10030d8 <_Write_External_SDRAM_1+0xd8>
 1003194:	15 00 00 00 	l.nop 0x0
 1003198:	84 41 00 00 	l.lwz r2,0x0(r1)
 100319c:	44 00 48 00 	l.jr r9
 10031a0:	9c 21 00 78 	l.addi r1,r1,0x78

010031a4 <_external_exeption>:
/*                  E X T E R N A L   E X E P T I O N S                       */
/******************************************************************************/


void external_exeption()
{      
 10031a4:	9c 21 ff fc 	l.addi r1,r1,0xfffffffc
 10031a8:	d4 01 10 00 	l.sw 0x0(r1),r2
 10031ac:	9c 41 00 04 	l.addi r2,r1,0x4
 10031b0:	84 41 00 00 	l.lwz r2,0x0(r1)
 10031b4:	44 00 48 00 	l.jr r9
 10031b8:	9c 21 00 04 	l.addi r1,r1,0x4

010031bc <_Start>:
#define RX
//#define BOTH
//#define  DB_BOTH

void Start()
{
 10031bc:	9c 21 f2 14 	l.addi r1,r1,0xfffff214
 10031c0:	d4 01 10 04 	l.sw 0x4(r1),r2
 10031c4:	9c 41 0d ec 	l.addi r2,r1,0xdec
 10031c8:	d4 01 48 00 	l.sw 0x0(r1),r9
   struct sd_card_csr *sd_set_reg = (struct sd_card_csr *)  (SD_CONTROLLER_BASE+SD_COMMAND);
 10031cc:	18 60 a0 00 	l.movhi r3,0xa000
 10031d0:	d7 c2 1a c8 	l.sw 0xfffff2c8(r2),r3
 10031d4:	84 82 f2 c8 	l.lwz r4,0xfffff2c8(r2)
 10031d8:	a8 84 00 04 	l.ori r4,r4,0x4
 10031dc:	d7 c2 22 cc 	l.sw 0xfffff2cc(r2),r4
 10031e0:	84 62 f2 cc 	l.lwz r3,0xfffff2cc(r2)
 10031e4:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3

  volatile unsigned long rtn_reg=0;
 10031e8:	9c 80 00 00 	l.addi r4,r0,0x0
 10031ec:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
   volatile  unsigned long rtn_reg1=0;
 10031f0:	9c 60 00 00 	l.addi r3,r0,0x0
 10031f4:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
		   unsigned char rec_block[512];
    unsigned char rec_blocka[512];
	    unsigned char rec_blockb[512];
  
   #ifdef RX
 for  (i =0; i<512;i++)
 10031f8:	9c 80 00 00 	l.addi r4,r0,0x0
 10031fc:	d7 e2 27 f4 	l.sw 0xfffffff4(r2),r4
 1003200:	00 00 00 18 	l.j 1003260 <_Start+0xa4>
 1003204:	15 00 00 00 	l.nop 0x0
   block[i]=0;
 1003208:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 100320c:	d7 c2 1a d0 	l.sw 0xfffff2d0(r2),r3
 1003210:	9c 82 fd e8 	l.addi r4,r2,0xfffffde8
 1003214:	d7 c2 22 c4 	l.sw 0xfffff2c4(r2),r4
 1003218:	84 62 f2 c4 	l.lwz r3,0xfffff2c4(r2)
 100321c:	84 82 f2 d0 	l.lwz r4,0xfffff2d0(r2)
 1003220:	e0 63 20 00 	l.add r3,r3,r4
 1003224:	d7 c2 1a c0 	l.sw 0xfffff2c0(r2),r3
 1003228:	9c 60 00 00 	l.addi r3,r0,0x0
 100322c:	d7 c2 1a bc 	l.sw 0xfffff2bc(r2),r3
 1003230:	84 82 f2 bc 	l.lwz r4,0xfffff2bc(r2)
 1003234:	db c2 22 bb 	l.sb 0xfffff2bb(r2),r4
 1003238:	8c 82 f2 bb 	l.lbz r4,0xfffff2bb(r2)
 100323c:	84 62 f2 c0 	l.lwz r3,0xfffff2c0(r2)
 1003240:	d8 03 20 00 	l.sb 0x0(r3),r4
		   unsigned char rec_block[512];
    unsigned char rec_blocka[512];
	    unsigned char rec_blockb[512];
  
   #ifdef RX
 for  (i =0; i<512;i++)
 1003244:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003248:	d7 c2 1a b4 	l.sw 0xfffff2b4(r2),r3
 100324c:	84 82 f2 b4 	l.lwz r4,0xfffff2b4(r2)
 1003250:	9c 84 00 01 	l.addi r4,r4,0x1
 1003254:	d7 c2 22 b0 	l.sw 0xfffff2b0(r2),r4
 1003258:	84 62 f2 b0 	l.lwz r3,0xfffff2b0(r2)
 100325c:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3
 1003260:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 1003264:	d7 c2 22 ac 	l.sw 0xfffff2ac(r2),r4
 1003268:	84 62 f2 ac 	l.lwz r3,0xfffff2ac(r2)
 100326c:	bd a3 01 ff 	l.sflesi r3,0x1ff
 1003270:	13 ff ff e6 	l.bf 1003208 <_Start+0x4c>
 1003274:	15 00 00 00 	l.nop 0x0
   blockb[i]=0xad;
   
  #endif
    

  unsigned long b=0x0001;
 1003278:	9c 80 00 01 	l.addi r4,r0,0x1
 100327c:	d7 c2 22 a8 	l.sw 0xfffff2a8(r2),r4
 1003280:	84 62 f2 a8 	l.lwz r3,0xfffff2a8(r2)
 1003284:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
   sd_card sd_card_0;
  
   
	uart_init();	
 1003288:	04 00 02 06 	l.jal 1003aa0 <_uart_init>
 100328c:	15 00 00 00 	l.nop 0x0
	sd_card_0 = sd_controller_init();
 1003290:	9c 82 f3 d4 	l.addi r4,r2,0xfffff3d4
 1003294:	d7 c2 22 a4 	l.sw 0xfffff2a4(r2),r4
 1003298:	84 62 f2 a4 	l.lwz r3,0xfffff2a4(r2)
 100329c:	04 00 05 35 	l.jal 1004770 <_sd_controller_init>
 10032a0:	15 00 00 00 	l.nop 0x0
  // Send out something  over UART

 
    if (sd_card_0.Active==1)
 10032a4:	8c 62 f3 dd 	l.lbz r3,0xfffff3dd(r2)
 10032a8:	d7 c2 1a d4 	l.sw 0xfffff2d4(r2),r3
 10032ac:	84 82 f2 d4 	l.lwz r4,0xfffff2d4(r2)
 10032b0:	bc 24 00 01 	l.sfnei r4,0x1
 10032b4:	10 00 00 34 	l.bf 1003384 <_Start+0x1c8>
 10032b8:	15 00 00 00 	l.nop 0x0
	{
		uart_print_str("Init 2 succes!\n");
 10032bc:	18 60 01 00 	l.movhi r3,0x100
 10032c0:	a8 63 4d dc 	l.ori r3,r3,0x4ddc
 10032c4:	04 00 02 d6 	l.jal 1003e1c <_uart_print_str>
 10032c8:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nvoltage_windows:\n");
 10032cc:	18 60 01 00 	l.movhi r3,0x100
 10032d0:	a8 63 4d ec 	l.ori r3,r3,0x4dec
 10032d4:	04 00 02 d2 	l.jal 1003e1c <_uart_print_str>
 10032d8:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.Voltage_window);
 10032dc:	84 62 f3 d8 	l.lwz r3,0xfffff3d8(r2)
 10032e0:	d7 c2 1a d8 	l.sw 0xfffff2d8(r2),r3
 10032e4:	84 62 f2 d8 	l.lwz r3,0xfffff2d8(r2)
 10032e8:	04 00 02 f2 	l.jal 1003eb0 <_uart_print_long>
 10032ec:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nRCA_Nr:\n");
 10032f0:	18 60 01 00 	l.movhi r3,0x100
 10032f4:	a8 63 4d ff 	l.ori r3,r3,0x4dff
 10032f8:	04 00 02 c9 	l.jal 1003e1c <_uart_print_str>
 10032fc:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.rca);
 1003300:	84 82 f3 d4 	l.lwz r4,0xfffff3d4(r2)
 1003304:	d7 c2 22 dc 	l.sw 0xfffff2dc(r2),r4
 1003308:	84 62 f2 dc 	l.lwz r3,0xfffff2dc(r2)
 100330c:	04 00 02 e9 	l.jal 1003eb0 <_uart_print_long>
 1003310:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nphys_spec_2_0 Y/N 1/0? :\n");
 1003314:	18 60 01 00 	l.movhi r3,0x100
 1003318:	a8 63 4e 09 	l.ori r3,r3,0x4e09
 100331c:	04 00 02 c0 	l.jal 1003e1c <_uart_print_str>
 1003320:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.phys_spec_2_0);
 1003324:	8c 62 f3 de 	l.lbz r3,0xfffff3de(r2)
 1003328:	d7 c2 1a e0 	l.sw 0xfffff2e0(r2),r3
 100332c:	84 82 f2 e0 	l.lwz r4,0xfffff2e0(r2)
 1003330:	d7 c2 22 e4 	l.sw 0xfffff2e4(r2),r4
 1003334:	84 62 f2 e4 	l.lwz r3,0xfffff2e4(r2)
 1003338:	04 00 02 de 	l.jal 1003eb0 <_uart_print_long>
 100333c:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nHCS? :\n");
 1003340:	18 60 01 00 	l.movhi r3,0x100
 1003344:	a8 63 4e 24 	l.ori r3,r3,0x4e24
 1003348:	04 00 02 b5 	l.jal 1003e1c <_uart_print_str>
 100334c:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.phys_spec_2_0);
 1003350:	8c 62 f3 de 	l.lbz r3,0xfffff3de(r2)
 1003354:	d7 c2 1a e8 	l.sw 0xfffff2e8(r2),r3
 1003358:	84 82 f2 e8 	l.lwz r4,0xfffff2e8(r2)
 100335c:	d7 c2 22 ec 	l.sw 0xfffff2ec(r2),r4
 1003360:	84 62 f2 ec 	l.lwz r3,0xfffff2ec(r2)
 1003364:	04 00 02 d3 	l.jal 1003eb0 <_uart_print_long>
 1003368:	15 00 00 00 	l.nop 0x0
			uart_print_str(":\n");
 100336c:	18 60 01 00 	l.movhi r3,0x100
 1003370:	a8 63 4e 2d 	l.ori r3,r3,0x4e2d
 1003374:	04 00 02 aa 	l.jal 1003e1c <_uart_print_str>
 1003378:	15 00 00 00 	l.nop 0x0
 100337c:	00 00 00 06 	l.j 1003394 <_Start+0x1d8>
 1003380:	15 00 00 00 	l.nop 0x0
	}
	else
		uart_print_str("Init2  failed :/!\n");
 1003384:	18 60 01 00 	l.movhi r3,0x100
 1003388:	a8 63 4e 30 	l.ori r3,r3,0x4e30
 100338c:	04 00 02 a4 	l.jal 1003e1c <_uart_print_str>
 1003390:	15 00 00 00 	l.nop 0x0

      /*SD_REG(SD_SOFTWARE_RST) =1;
	    SD_REG(SD_SOFTWARE_RST) =0;
		sd_card_0 = sd_controller_init();
*/
    if (sd_card_0.Active==1)
 1003394:	8c 62 f3 dd 	l.lbz r3,0xfffff3dd(r2)
 1003398:	d7 c2 1a f0 	l.sw 0xfffff2f0(r2),r3
 100339c:	84 82 f2 f0 	l.lwz r4,0xfffff2f0(r2)
 10033a0:	bc 24 00 01 	l.sfnei r4,0x1
 10033a4:	10 00 00 34 	l.bf 1003474 <_Start+0x2b8>
 10033a8:	15 00 00 00 	l.nop 0x0
	{
		uart_print_str("Init 2 succes!\n");
 10033ac:	18 60 01 00 	l.movhi r3,0x100
 10033b0:	a8 63 4d dc 	l.ori r3,r3,0x4ddc
 10033b4:	04 00 02 9a 	l.jal 1003e1c <_uart_print_str>
 10033b8:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nvoltage_windows:\n");
 10033bc:	18 60 01 00 	l.movhi r3,0x100
 10033c0:	a8 63 4d ec 	l.ori r3,r3,0x4dec
 10033c4:	04 00 02 96 	l.jal 1003e1c <_uart_print_str>
 10033c8:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.Voltage_window);
 10033cc:	84 62 f3 d8 	l.lwz r3,0xfffff3d8(r2)
 10033d0:	d7 c2 1a f4 	l.sw 0xfffff2f4(r2),r3
 10033d4:	84 62 f2 f4 	l.lwz r3,0xfffff2f4(r2)
 10033d8:	04 00 02 b6 	l.jal 1003eb0 <_uart_print_long>
 10033dc:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nRCA_Nr:\n");
 10033e0:	18 60 01 00 	l.movhi r3,0x100
 10033e4:	a8 63 4d ff 	l.ori r3,r3,0x4dff
 10033e8:	04 00 02 8d 	l.jal 1003e1c <_uart_print_str>
 10033ec:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.rca);
 10033f0:	84 82 f3 d4 	l.lwz r4,0xfffff3d4(r2)
 10033f4:	d7 c2 22 f8 	l.sw 0xfffff2f8(r2),r4
 10033f8:	84 62 f2 f8 	l.lwz r3,0xfffff2f8(r2)
 10033fc:	04 00 02 ad 	l.jal 1003eb0 <_uart_print_long>
 1003400:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nphys_spec_2_0 Y/N 1/0? :\n");
 1003404:	18 60 01 00 	l.movhi r3,0x100
 1003408:	a8 63 4e 09 	l.ori r3,r3,0x4e09
 100340c:	04 00 02 84 	l.jal 1003e1c <_uart_print_str>
 1003410:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.phys_spec_2_0);
 1003414:	8c 62 f3 de 	l.lbz r3,0xfffff3de(r2)
 1003418:	d7 c2 1a fc 	l.sw 0xfffff2fc(r2),r3
 100341c:	84 82 f2 fc 	l.lwz r4,0xfffff2fc(r2)
 1003420:	d7 c2 23 00 	l.sw 0xfffff300(r2),r4
 1003424:	84 62 f3 00 	l.lwz r3,0xfffff300(r2)
 1003428:	04 00 02 a2 	l.jal 1003eb0 <_uart_print_long>
 100342c:	15 00 00 00 	l.nop 0x0
		uart_print_str("\nHCS? :\n");
 1003430:	18 60 01 00 	l.movhi r3,0x100
 1003434:	a8 63 4e 24 	l.ori r3,r3,0x4e24
 1003438:	04 00 02 79 	l.jal 1003e1c <_uart_print_str>
 100343c:	15 00 00 00 	l.nop 0x0
		uart_print_long(sd_card_0.phys_spec_2_0);
 1003440:	8c 62 f3 de 	l.lbz r3,0xfffff3de(r2)
 1003444:	d7 c2 1b 04 	l.sw 0xfffff304(r2),r3
 1003448:	84 82 f3 04 	l.lwz r4,0xfffff304(r2)
 100344c:	d7 c2 23 08 	l.sw 0xfffff308(r2),r4
 1003450:	84 62 f3 08 	l.lwz r3,0xfffff308(r2)
 1003454:	04 00 02 97 	l.jal 1003eb0 <_uart_print_long>
 1003458:	15 00 00 00 	l.nop 0x0
			uart_print_str(":\n");
 100345c:	18 60 01 00 	l.movhi r3,0x100
 1003460:	a8 63 4e 2d 	l.ori r3,r3,0x4e2d
 1003464:	04 00 02 6e 	l.jal 1003e1c <_uart_print_str>
 1003468:	15 00 00 00 	l.nop 0x0
 100346c:	00 00 00 06 	l.j 1003484 <_Start+0x2c8>
 1003470:	15 00 00 00 	l.nop 0x0
	}
	else
		uart_print_str("Init2  failed :/!\n");
 1003474:	18 60 01 00 	l.movhi r3,0x100
 1003478:	a8 63 4e 30 	l.ori r3,r3,0x4e30
 100347c:	04 00 02 68 	l.jal 1003e1c <_uart_print_str>
 1003480:	15 00 00 00 	l.nop 0x0
	   
	   
        SD_REG(SD_COMMAND) = CMD9  |WORD_0| CICE | CRCE | RSP_146;  
 1003484:	18 60 a0 00 	l.movhi r3,0xa000
 1003488:	d7 c2 1a a0 	l.sw 0xfffff2a0(r2),r3
 100348c:	84 82 f2 a0 	l.lwz r4,0xfffff2a0(r2)
 1003490:	a8 84 00 04 	l.ori r4,r4,0x4
 1003494:	d7 c2 23 0c 	l.sw 0xfffff30c(r2),r4
 1003498:	9c 60 09 19 	l.addi r3,r0,0x919
 100349c:	d7 c2 1a 9c 	l.sw 0xfffff29c(r2),r3
 10034a0:	84 62 f2 9c 	l.lwz r3,0xfffff29c(r2)
 10034a4:	84 82 f3 0c 	l.lwz r4,0xfffff30c(r2)
 10034a8:	d4 04 18 00 	l.sw 0x0(r4),r3
		SD_REG(SD_ARG)=sd_card_0.rca | 0xf0f0;
 10034ac:	18 80 a0 00 	l.movhi r4,0xa000
 10034b0:	d7 c2 23 10 	l.sw 0xfffff310(r2),r4
 10034b4:	84 62 f3 d4 	l.lwz r3,0xfffff3d4(r2)
 10034b8:	d7 c2 1b 14 	l.sw 0xfffff314(r2),r3
 10034bc:	84 82 f3 14 	l.lwz r4,0xfffff314(r2)
 10034c0:	a8 84 f0 f0 	l.ori r4,r4,0xf0f0
 10034c4:	d7 c2 23 18 	l.sw 0xfffff318(r2),r4
 10034c8:	84 82 f3 18 	l.lwz r4,0xfffff318(r2)
 10034cc:	84 62 f3 10 	l.lwz r3,0xfffff310(r2)
 10034d0:	d4 03 20 00 	l.sw 0x0(r3),r4
           if (!sd_wait_rsp())
 10034d4:	04 00 03 eb 	l.jal 1004480 <_sd_wait_rsp>
 10034d8:	15 00 00 00 	l.nop 0x0
 10034dc:	d7 c2 5a 98 	l.sw 0xfffff298(r2),r11
 10034e0:	84 62 f2 98 	l.lwz r3,0xfffff298(r2)
 10034e4:	d7 c2 1b 1c 	l.sw 0xfffff31c(r2),r3
 10034e8:	84 82 f3 1c 	l.lwz r4,0xfffff31c(r2)
 10034ec:	bc 24 00 00 	l.sfnei r4,0x0
 10034f0:	10 00 00 08 	l.bf 1003510 <_Start+0x354>
 10034f4:	15 00 00 00 	l.nop 0x0
			 	uart_print_str(" send failed :/!\n");
 10034f8:	18 60 01 00 	l.movhi r3,0x100
 10034fc:	a8 63 4e 43 	l.ori r3,r3,0x4e43
 1003500:	04 00 02 47 	l.jal 1003e1c <_uart_print_str>
 1003504:	15 00 00 00 	l.nop 0x0
 1003508:	00 00 00 15 	l.j 100355c <_Start+0x3a0>
 100350c:	15 00 00 00 	l.nop 0x0
		 else{
		 	  uart_print_str("CSD 0 \n");
 1003510:	18 60 01 00 	l.movhi r3,0x100
 1003514:	a8 63 4e 55 	l.ori r3,r3,0x4e55
 1003518:	04 00 02 41 	l.jal 1003e1c <_uart_print_str>
 100351c:	15 00 00 00 	l.nop 0x0
		  uart_print_long( SD_REG(SD_RESP1)  ) ;
 1003520:	18 60 a0 00 	l.movhi r3,0xa000
 1003524:	d7 c2 1a 94 	l.sw 0xfffff294(r2),r3
 1003528:	84 82 f2 94 	l.lwz r4,0xfffff294(r2)
 100352c:	a8 84 00 0c 	l.ori r4,r4,0xc
 1003530:	d7 c2 23 20 	l.sw 0xfffff320(r2),r4
 1003534:	84 62 f3 20 	l.lwz r3,0xfffff320(r2)
 1003538:	84 63 00 00 	l.lwz r3,0x0(r3)
 100353c:	d7 c2 1b 24 	l.sw 0xfffff324(r2),r3
 1003540:	84 62 f3 24 	l.lwz r3,0xfffff324(r2)
 1003544:	04 00 02 5b 	l.jal 1003eb0 <_uart_print_long>
 1003548:	15 00 00 00 	l.nop 0x0
	        	  uart_print_str("  \n");
 100354c:	18 60 01 00 	l.movhi r3,0x100
 1003550:	a8 63 4e 5d 	l.ori r3,r3,0x4e5d
 1003554:	04 00 02 32 	l.jal 1003e1c <_uart_print_str>
 1003558:	15 00 00 00 	l.nop 0x0
		  uart_print_long( SD_REG(SD_RESP1)  ) ;
	        	  uart_print_str("  \n");
		} */
		
  
  	  uart_print_str("error?  \n");
 100355c:	18 60 01 00 	l.movhi r3,0x100
 1003560:	a8 63 4e 61 	l.ori r3,r3,0x4e61
 1003564:	04 00 02 2e 	l.jal 1003e1c <_uart_print_str>
 1003568:	15 00 00 00 	l.nop 0x0
		  uart_print_long( SD_REG( SD_ERROR_INT_STATUS)  ) ;
 100356c:	18 80 a0 00 	l.movhi r4,0xa000
 1003570:	d7 c2 22 90 	l.sw 0xfffff290(r2),r4
 1003574:	84 62 f2 90 	l.lwz r3,0xfffff290(r2)
 1003578:	a8 63 00 34 	l.ori r3,r3,0x34
 100357c:	d7 c2 1b 28 	l.sw 0xfffff328(r2),r3
 1003580:	84 82 f3 28 	l.lwz r4,0xfffff328(r2)
 1003584:	84 84 00 00 	l.lwz r4,0x0(r4)
 1003588:	d7 c2 23 2c 	l.sw 0xfffff32c(r2),r4
 100358c:	84 62 f3 2c 	l.lwz r3,0xfffff32c(r2)
 1003590:	04 00 02 48 	l.jal 1003eb0 <_uart_print_long>
 1003594:	15 00 00 00 	l.nop 0x0
 

     //Put in transfer state, select card + set block size

 
	    SD_REG(SD_COMMAND) = CMD7 | CICE | CRCE | RSP_48;  
 1003598:	18 60 a0 00 	l.movhi r3,0xa000
 100359c:	d7 c2 1a 8c 	l.sw 0xfffff28c(r2),r3
 10035a0:	84 82 f2 8c 	l.lwz r4,0xfffff28c(r2)
 10035a4:	a8 84 00 04 	l.ori r4,r4,0x4
 10035a8:	d7 c2 23 30 	l.sw 0xfffff330(r2),r4
 10035ac:	9c 60 07 1a 	l.addi r3,r0,0x71a
 10035b0:	d7 c2 1a 88 	l.sw 0xfffff288(r2),r3
 10035b4:	84 62 f2 88 	l.lwz r3,0xfffff288(r2)
 10035b8:	84 82 f3 30 	l.lwz r4,0xfffff330(r2)
 10035bc:	d4 04 18 00 	l.sw 0x0(r4),r3
		SD_REG(SD_ARG)=sd_card_0.rca | 0xf0f0;
 10035c0:	18 80 a0 00 	l.movhi r4,0xa000
 10035c4:	d7 c2 23 34 	l.sw 0xfffff334(r2),r4
 10035c8:	84 62 f3 d4 	l.lwz r3,0xfffff3d4(r2)
 10035cc:	d7 c2 1b 38 	l.sw 0xfffff338(r2),r3
 10035d0:	84 82 f3 38 	l.lwz r4,0xfffff338(r2)
 10035d4:	a8 84 f0 f0 	l.ori r4,r4,0xf0f0
 10035d8:	d7 c2 23 3c 	l.sw 0xfffff33c(r2),r4
 10035dc:	84 82 f3 3c 	l.lwz r4,0xfffff33c(r2)
 10035e0:	84 62 f3 34 	l.lwz r3,0xfffff334(r2)
 10035e4:	d4 03 20 00 	l.sw 0x0(r3),r4
		if (!sd_wait_rsp())
 10035e8:	04 00 03 a6 	l.jal 1004480 <_sd_wait_rsp>
 10035ec:	15 00 00 00 	l.nop 0x0
 10035f0:	d7 c2 5a 84 	l.sw 0xfffff284(r2),r11
 10035f4:	84 62 f2 84 	l.lwz r3,0xfffff284(r2)
 10035f8:	d7 c2 1b 40 	l.sw 0xfffff340(r2),r3
 10035fc:	84 82 f3 40 	l.lwz r4,0xfffff340(r2)
 1003600:	bc 24 00 00 	l.sfnei r4,0x0
 1003604:	10 00 00 08 	l.bf 1003624 <_Start+0x468>
 1003608:	15 00 00 00 	l.nop 0x0
			 	uart_print_str("Go send failed :/!\n");
 100360c:	18 60 01 00 	l.movhi r3,0x100
 1003610:	a8 63 4e 6b 	l.ori r3,r3,0x4e6b
 1003614:	04 00 02 02 	l.jal 1003e1c <_uart_print_str>
 1003618:	15 00 00 00 	l.nop 0x0
 100361c:	00 00 00 12 	l.j 1003664 <_Start+0x4a8>
 1003620:	15 00 00 00 	l.nop 0x0
		
		else if (   SD_REG(SD_RESP1) == (CARD_STATUS_STB  |  READY_FOR_DATA ) )
 1003624:	18 60 a0 00 	l.movhi r3,0xa000
 1003628:	d7 c2 1a 80 	l.sw 0xfffff280(r2),r3
 100362c:	84 82 f2 80 	l.lwz r4,0xfffff280(r2)
 1003630:	a8 84 00 0c 	l.ori r4,r4,0xc
 1003634:	d7 c2 23 44 	l.sw 0xfffff344(r2),r4
 1003638:	84 62 f3 44 	l.lwz r3,0xfffff344(r2)
 100363c:	84 63 00 00 	l.lwz r3,0x0(r3)
 1003640:	d7 c2 1b 48 	l.sw 0xfffff348(r2),r3
 1003644:	84 82 f3 48 	l.lwz r4,0xfffff348(r2)
 1003648:	bc 24 07 00 	l.sfnei r4,0x700
 100364c:	10 00 00 06 	l.bf 1003664 <_Start+0x4a8>
 1003650:	15 00 00 00 	l.nop 0x0
			uart_print_str("Ready to transfer data!\n");
 1003654:	18 60 01 00 	l.movhi r3,0x100
 1003658:	a8 63 4e 7f 	l.ori r3,r3,0x4e7f
 100365c:	04 00 01 f0 	l.jal 1003e1c <_uart_print_str>
 1003660:	15 00 00 00 	l.nop 0x0
			
			
		SD_REG(SD_COMMAND) = CMD16 | CICE | CRCE | RSP_48;  
 1003664:	18 60 a0 00 	l.movhi r3,0xa000
 1003668:	d7 c2 1a 7c 	l.sw 0xfffff27c(r2),r3
 100366c:	84 82 f2 7c 	l.lwz r4,0xfffff27c(r2)
 1003670:	a8 84 00 04 	l.ori r4,r4,0x4
 1003674:	d7 c2 23 4c 	l.sw 0xfffff34c(r2),r4
 1003678:	9c 60 10 1a 	l.addi r3,r0,0x101a
 100367c:	d7 c2 1a 78 	l.sw 0xfffff278(r2),r3
 1003680:	84 62 f2 78 	l.lwz r3,0xfffff278(r2)
 1003684:	84 82 f3 4c 	l.lwz r4,0xfffff34c(r2)
 1003688:	d4 04 18 00 	l.sw 0x0(r4),r3
		SD_REG(SD_ARG)=512;
 100368c:	18 80 a0 00 	l.movhi r4,0xa000
 1003690:	d7 c2 23 50 	l.sw 0xfffff350(r2),r4
 1003694:	9c 60 02 00 	l.addi r3,r0,0x200
 1003698:	d7 c2 1a 74 	l.sw 0xfffff274(r2),r3
 100369c:	84 62 f2 74 	l.lwz r3,0xfffff274(r2)
 10036a0:	84 82 f3 50 	l.lwz r4,0xfffff350(r2)
 10036a4:	d4 04 18 00 	l.sw 0x0(r4),r3
		if (!sd_wait_rsp())
 10036a8:	04 00 03 76 	l.jal 1004480 <_sd_wait_rsp>
 10036ac:	15 00 00 00 	l.nop 0x0
 10036b0:	d7 c2 5a 70 	l.sw 0xfffff270(r2),r11
 10036b4:	84 82 f2 70 	l.lwz r4,0xfffff270(r2)
 10036b8:	d7 c2 23 54 	l.sw 0xfffff354(r2),r4
 10036bc:	84 62 f3 54 	l.lwz r3,0xfffff354(r2)
 10036c0:	bc 23 00 00 	l.sfnei r3,0x0
 10036c4:	10 00 00 06 	l.bf 10036dc <_Start+0x520>
 10036c8:	15 00 00 00 	l.nop 0x0
			 	uart_print_str("Go send failed :/!\n");
 10036cc:	18 60 01 00 	l.movhi r3,0x100
 10036d0:	a8 63 4e 6b 	l.ori r3,r3,0x4e6b
 10036d4:	04 00 01 d2 	l.jal 1003e1c <_uart_print_str>
 10036d8:	15 00 00 00 	l.nop 0x0
	
	 	uart_print_str("Card Status reg CMD16: \n");
 10036dc:	18 60 01 00 	l.movhi r3,0x100
 10036e0:	a8 63 4e 98 	l.ori r3,r3,0x4e98
 10036e4:	04 00 01 ce 	l.jal 1003e1c <_uart_print_str>
 10036e8:	15 00 00 00 	l.nop 0x0
    	  uart_print_long( SD_REG(SD_RESP1)  ) ; 
 10036ec:	18 80 a0 00 	l.movhi r4,0xa000
 10036f0:	d7 c2 22 6c 	l.sw 0xfffff26c(r2),r4
 10036f4:	84 62 f2 6c 	l.lwz r3,0xfffff26c(r2)
 10036f8:	a8 63 00 0c 	l.ori r3,r3,0xc
 10036fc:	d7 c2 1b 58 	l.sw 0xfffff358(r2),r3
 1003700:	84 82 f3 58 	l.lwz r4,0xfffff358(r2)
 1003704:	84 84 00 00 	l.lwz r4,0x0(r4)
 1003708:	d7 c2 23 5c 	l.sw 0xfffff35c(r2),r4
 100370c:	84 62 f3 5c 	l.lwz r3,0xfffff35c(r2)
 1003710:	04 00 01 e8 	l.jal 1003eb0 <_uart_print_long>
 1003714:	15 00 00 00 	l.nop 0x0
	//Set Bus width to 4, CMD55 followed by ACMD 6
	 REG32(SD_CONTROLLER_BASE+SD_COMMAND) = CMD55|RSP_48; 
 1003718:	18 60 a0 00 	l.movhi r3,0xa000
 100371c:	d7 c2 1a 68 	l.sw 0xfffff268(r2),r3
 1003720:	84 82 f2 68 	l.lwz r4,0xfffff268(r2)
 1003724:	a8 84 00 04 	l.ori r4,r4,0x4
 1003728:	d7 c2 23 60 	l.sw 0xfffff360(r2),r4
 100372c:	9c 60 37 02 	l.addi r3,r0,0x3702
 1003730:	d7 c2 1a 64 	l.sw 0xfffff264(r2),r3
 1003734:	84 62 f2 64 	l.lwz r3,0xfffff264(r2)
 1003738:	84 82 f3 60 	l.lwz r4,0xfffff360(r2)
 100373c:	d4 04 18 00 	l.sw 0x0(r4),r3
	 REG32(SD_CONTROLLER_BASE+SD_ARG) =sd_card_0.rca | 0xf0f0;
 1003740:	18 80 a0 00 	l.movhi r4,0xa000
 1003744:	d7 c2 23 64 	l.sw 0xfffff364(r2),r4
 1003748:	84 62 f3 d4 	l.lwz r3,0xfffff3d4(r2)
 100374c:	d7 c2 1b 68 	l.sw 0xfffff368(r2),r3
 1003750:	84 82 f3 68 	l.lwz r4,0xfffff368(r2)
 1003754:	a8 84 f0 f0 	l.ori r4,r4,0xf0f0
 1003758:	d7 c2 23 6c 	l.sw 0xfffff36c(r2),r4
 100375c:	84 82 f3 6c 	l.lwz r4,0xfffff36c(r2)
 1003760:	84 62 f3 64 	l.lwz r3,0xfffff364(r2)
 1003764:	d4 03 20 00 	l.sw 0x0(r3),r4
	 	if (!sd_wait_rsp())
 1003768:	04 00 03 46 	l.jal 1004480 <_sd_wait_rsp>
 100376c:	15 00 00 00 	l.nop 0x0
 1003770:	d7 c2 5a 60 	l.sw 0xfffff260(r2),r11
 1003774:	84 62 f2 60 	l.lwz r3,0xfffff260(r2)
 1003778:	d7 c2 1b 70 	l.sw 0xfffff370(r2),r3
 100377c:	84 82 f3 70 	l.lwz r4,0xfffff370(r2)
 1003780:	bc 24 00 00 	l.sfnei r4,0x0
 1003784:	10 00 00 06 	l.bf 100379c <_Start+0x5e0>
 1003788:	15 00 00 00 	l.nop 0x0
			 	uart_print_str("CMD55 send failed :/!\n");
 100378c:	18 60 01 00 	l.movhi r3,0x100
 1003790:	a8 63 4e b1 	l.ori r3,r3,0x4eb1
 1003794:	04 00 01 a2 	l.jal 1003e1c <_uart_print_str>
 1003798:	15 00 00 00 	l.nop 0x0
	 
	    	uart_print_str("Card Status reg CMD55: \n");
 100379c:	18 60 01 00 	l.movhi r3,0x100
 10037a0:	a8 63 4e c8 	l.ori r3,r3,0x4ec8
 10037a4:	04 00 01 9e 	l.jal 1003e1c <_uart_print_str>
 10037a8:	15 00 00 00 	l.nop 0x0
    	  uart_print_long( SD_REG(SD_RESP1)  ) ; 
 10037ac:	18 60 a0 00 	l.movhi r3,0xa000
 10037b0:	d7 c2 1a 5c 	l.sw 0xfffff25c(r2),r3
 10037b4:	84 82 f2 5c 	l.lwz r4,0xfffff25c(r2)
 10037b8:	a8 84 00 0c 	l.ori r4,r4,0xc
 10037bc:	d7 c2 23 74 	l.sw 0xfffff374(r2),r4
 10037c0:	84 62 f3 74 	l.lwz r3,0xfffff374(r2)
 10037c4:	84 63 00 00 	l.lwz r3,0x0(r3)
 10037c8:	d7 c2 1b 78 	l.sw 0xfffff378(r2),r3
 10037cc:	84 62 f3 78 	l.lwz r3,0xfffff378(r2)
 10037d0:	04 00 01 b8 	l.jal 1003eb0 <_uart_print_long>
 10037d4:	15 00 00 00 	l.nop 0x0
	   
	 	SD_REG(SD_COMMAND) = ACMD6 | CICE | CRCE | RSP_48;  
 10037d8:	18 80 a0 00 	l.movhi r4,0xa000
 10037dc:	d7 c2 22 58 	l.sw 0xfffff258(r2),r4
 10037e0:	84 62 f2 58 	l.lwz r3,0xfffff258(r2)
 10037e4:	a8 63 00 04 	l.ori r3,r3,0x4
 10037e8:	d7 c2 1b 7c 	l.sw 0xfffff37c(r2),r3
 10037ec:	9c 80 06 1a 	l.addi r4,r0,0x61a
 10037f0:	d7 c2 22 54 	l.sw 0xfffff254(r2),r4
 10037f4:	84 82 f2 54 	l.lwz r4,0xfffff254(r2)
 10037f8:	84 62 f3 7c 	l.lwz r3,0xfffff37c(r2)
 10037fc:	d4 03 20 00 	l.sw 0x0(r3),r4
		SD_REG(SD_ARG)=0x2;
 1003800:	18 60 a0 00 	l.movhi r3,0xa000
 1003804:	d7 c2 1b 80 	l.sw 0xfffff380(r2),r3
 1003808:	9c 80 00 02 	l.addi r4,r0,0x2
 100380c:	d7 c2 22 50 	l.sw 0xfffff250(r2),r4
 1003810:	84 82 f2 50 	l.lwz r4,0xfffff250(r2)
 1003814:	84 62 f3 80 	l.lwz r3,0xfffff380(r2)
 1003818:	d4 03 20 00 	l.sw 0x0(r3),r4
		if (!sd_wait_rsp())
 100381c:	04 00 03 19 	l.jal 1004480 <_sd_wait_rsp>
 1003820:	15 00 00 00 	l.nop 0x0
 1003824:	d7 c2 5a 4c 	l.sw 0xfffff24c(r2),r11
 1003828:	84 62 f2 4c 	l.lwz r3,0xfffff24c(r2)
 100382c:	d7 c2 1b 84 	l.sw 0xfffff384(r2),r3
 1003830:	84 82 f3 84 	l.lwz r4,0xfffff384(r2)
 1003834:	bc 24 00 00 	l.sfnei r4,0x0
 1003838:	10 00 00 06 	l.bf 1003850 <_Start+0x694>
 100383c:	15 00 00 00 	l.nop 0x0
			 	uart_print_str("ACMD6 send failed :/!\n");
 1003840:	18 60 01 00 	l.movhi r3,0x100
 1003844:	a8 63 4e e1 	l.ori r3,r3,0x4ee1
 1003848:	04 00 01 75 	l.jal 1003e1c <_uart_print_str>
 100384c:	15 00 00 00 	l.nop 0x0
				
		uart_print_str("Card Status reg ACMD6: \n");
 1003850:	18 60 01 00 	l.movhi r3,0x100
 1003854:	a8 63 4e f8 	l.ori r3,r3,0x4ef8
 1003858:	04 00 01 71 	l.jal 1003e1c <_uart_print_str>
 100385c:	15 00 00 00 	l.nop 0x0
    	  uart_print_long( SD_REG(SD_RESP1)  ) ; 	
 1003860:	18 60 a0 00 	l.movhi r3,0xa000
 1003864:	d7 c2 1a 48 	l.sw 0xfffff248(r2),r3
 1003868:	84 82 f2 48 	l.lwz r4,0xfffff248(r2)
 100386c:	a8 84 00 0c 	l.ori r4,r4,0xc
 1003870:	d7 c2 23 88 	l.sw 0xfffff388(r2),r4
 1003874:	84 62 f3 88 	l.lwz r3,0xfffff388(r2)
 1003878:	84 63 00 00 	l.lwz r3,0x0(r3)
 100387c:	d7 c2 1b 8c 	l.sw 0xfffff38c(r2),r3
 1003880:	84 62 f3 8c 	l.lwz r3,0xfffff38c(r2)
 1003884:	04 00 01 8b 	l.jal 1003eb0 <_uart_print_long>
 1003888:	15 00 00 00 	l.nop 0x0
	       uart_print_str("\n");	
 100388c:	18 60 01 00 	l.movhi r3,0x100
 1003890:	a8 63 4f 11 	l.ori r3,r3,0x4f11
 1003894:	04 00 01 62 	l.jal 1003e1c <_uart_print_str>
 1003898:	15 00 00 00 	l.nop 0x0
	
		 	int cnt=0;
 100389c:	9c 80 00 00 	l.addi r4,r0,0x0
 10038a0:	d7 e2 27 fc 	l.sw 0xfffffffc(r2),r4
	  #endif
	  
	 	#ifdef  RX
	
    
	SD_REG(BD_RX)  = &blockb;
 10038a4:	18 60 a0 00 	l.movhi r3,0xa000
 10038a8:	d7 c2 1a 44 	l.sw 0xfffff244(r2),r3
 10038ac:	84 82 f2 44 	l.lwz r4,0xfffff244(r2)
 10038b0:	a8 84 00 60 	l.ori r4,r4,0x60
 10038b4:	d7 c2 23 90 	l.sw 0xfffff390(r2),r4
 10038b8:	9c 62 f9 e8 	l.addi r3,r2,0xfffff9e8
 10038bc:	d7 c2 1b 94 	l.sw 0xfffff394(r2),r3
 10038c0:	84 82 f3 94 	l.lwz r4,0xfffff394(r2)
 10038c4:	d7 c2 23 98 	l.sw 0xfffff398(r2),r4
 10038c8:	84 82 f3 98 	l.lwz r4,0xfffff398(r2)
 10038cc:	84 62 f3 90 	l.lwz r3,0xfffff390(r2)
 10038d0:	d4 03 20 00 	l.sw 0x0(r3),r4
		SD_REG(BD_RX)  =0;
 10038d4:	18 60 a0 00 	l.movhi r3,0xa000
 10038d8:	d7 c2 1a 40 	l.sw 0xfffff240(r2),r3
 10038dc:	84 82 f2 40 	l.lwz r4,0xfffff240(r2)
 10038e0:	a8 84 00 60 	l.ori r4,r4,0x60
 10038e4:	d7 c2 23 9c 	l.sw 0xfffff39c(r2),r4
 10038e8:	9c 80 00 00 	l.addi r4,r0,0x0
 10038ec:	84 62 f3 9c 	l.lwz r3,0xfffff39c(r2)
 10038f0:	d4 03 20 00 	l.sw 0x0(r3),r4
		while (  ((rtn_reg  )  !=0x20  ) ){
			rtn_reg= SD_REG(BD_ISR) ;

		  } */
		
		while (  ((rtn_reg  &1)  !=1  ) ){
 10038f4:	00 00 00 0c 	l.j 1003924 <_Start+0x768>
 10038f8:	15 00 00 00 	l.nop 0x0
			rtn_reg= SD_REG(BD_ISR) ;
 10038fc:	18 60 a0 00 	l.movhi r3,0xa000
 1003900:	d7 c2 1a 3c 	l.sw 0xfffff23c(r2),r3
 1003904:	84 82 f2 3c 	l.lwz r4,0xfffff23c(r2)
 1003908:	a8 84 00 54 	l.ori r4,r4,0x54
 100390c:	d7 c2 23 a0 	l.sw 0xfffff3a0(r2),r4
 1003910:	84 62 f3 a0 	l.lwz r3,0xfffff3a0(r2)
 1003914:	84 63 00 00 	l.lwz r3,0x0(r3)
 1003918:	d7 c2 1b a4 	l.sw 0xfffff3a4(r2),r3
 100391c:	84 82 f3 a4 	l.lwz r4,0xfffff3a4(r2)
 1003920:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
		while (  ((rtn_reg  )  !=0x20  ) ){
			rtn_reg= SD_REG(BD_ISR) ;

		  } */
		
		while (  ((rtn_reg  &1)  !=1  ) ){
 1003924:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1003928:	d7 c2 1b a8 	l.sw 0xfffff3a8(r2),r3
 100392c:	84 82 f3 a8 	l.lwz r4,0xfffff3a8(r2)
 1003930:	a4 84 00 01 	l.andi r4,r4,0x1
 1003934:	d7 c2 23 ac 	l.sw 0xfffff3ac(r2),r4
 1003938:	84 62 f3 ac 	l.lwz r3,0xfffff3ac(r2)
 100393c:	bc 03 00 00 	l.sfeqi r3,0x0
 1003940:	13 ff ff ef 	l.bf 10038fc <_Start+0x740>
 1003944:	15 00 00 00 	l.nop 0x0
			rtn_reg= SD_REG(BD_ISR) ;
		  } 
		 
		  uart_print_long( SD_REG(BD_ISR)  ) ; 
 1003948:	18 80 a0 00 	l.movhi r4,0xa000
 100394c:	d7 c2 22 38 	l.sw 0xfffff238(r2),r4
 1003950:	84 62 f2 38 	l.lwz r3,0xfffff238(r2)
 1003954:	a8 63 00 54 	l.ori r3,r3,0x54
 1003958:	d7 c2 1b b0 	l.sw 0xfffff3b0(r2),r3
 100395c:	84 82 f3 b0 	l.lwz r4,0xfffff3b0(r2)
 1003960:	84 84 00 00 	l.lwz r4,0x0(r4)
 1003964:	d7 c2 23 b4 	l.sw 0xfffff3b4(r2),r4
 1003968:	84 62 f3 b4 	l.lwz r3,0xfffff3b4(r2)
 100396c:	04 00 01 51 	l.jal 1003eb0 <_uart_print_long>
 1003970:	15 00 00 00 	l.nop 0x0
		  uart_print_str("Card Status reg: \n");
 1003974:	18 60 01 00 	l.movhi r3,0x100
 1003978:	a8 63 4f 13 	l.ori r3,r3,0x4f13
 100397c:	04 00 01 28 	l.jal 1003e1c <_uart_print_str>
 1003980:	15 00 00 00 	l.nop 0x0
		  uart_print_long( SD_REG(SD_RESP1)  ) ;  
 1003984:	18 60 a0 00 	l.movhi r3,0xa000
 1003988:	d7 c2 1a 34 	l.sw 0xfffff234(r2),r3
 100398c:	84 82 f2 34 	l.lwz r4,0xfffff234(r2)
 1003990:	a8 84 00 0c 	l.ori r4,r4,0xc
 1003994:	d7 c2 23 b8 	l.sw 0xfffff3b8(r2),r4
 1003998:	84 62 f3 b8 	l.lwz r3,0xfffff3b8(r2)
 100399c:	84 63 00 00 	l.lwz r3,0x0(r3)
 10039a0:	d7 c2 1b bc 	l.sw 0xfffff3bc(r2),r3
 10039a4:	84 62 f3 bc 	l.lwz r3,0xfffff3bc(r2)
 10039a8:	04 00 01 42 	l.jal 1003eb0 <_uart_print_long>
 10039ac:	15 00 00 00 	l.nop 0x0
		  	uart_print_str("\n"); 
 10039b0:	18 60 01 00 	l.movhi r3,0x100
 10039b4:	a8 63 4f 11 	l.ori r3,r3,0x4f11
 10039b8:	04 00 01 19 	l.jal 1003e1c <_uart_print_str>
 10039bc:	15 00 00 00 	l.nop 0x0
			  uart_print_long( SD_REG(BD_ISR)  ) ; 
 10039c0:	18 80 a0 00 	l.movhi r4,0xa000
 10039c4:	d7 c2 22 30 	l.sw 0xfffff230(r2),r4
 10039c8:	84 62 f2 30 	l.lwz r3,0xfffff230(r2)
 10039cc:	a8 63 00 54 	l.ori r3,r3,0x54
 10039d0:	d7 c2 1b c0 	l.sw 0xfffff3c0(r2),r3
 10039d4:	84 82 f3 c0 	l.lwz r4,0xfffff3c0(r2)
 10039d8:	84 84 00 00 	l.lwz r4,0x0(r4)
 10039dc:	d7 c2 23 c4 	l.sw 0xfffff3c4(r2),r4
 10039e0:	84 62 f3 c4 	l.lwz r3,0xfffff3c4(r2)
 10039e4:	04 00 01 33 	l.jal 1003eb0 <_uart_print_long>
 10039e8:	15 00 00 00 	l.nop 0x0
		    	uart_print_str("\n"); 
 10039ec:	18 60 01 00 	l.movhi r3,0x100
 10039f0:	a8 63 4f 11 	l.ori r3,r3,0x4f11
 10039f4:	04 00 01 0a 	l.jal 1003e1c <_uart_print_str>
 10039f8:	15 00 00 00 	l.nop 0x0

   	   for  (i =0; i<512;i++) {
 10039fc:	9c 60 00 00 	l.addi r3,r0,0x0
 1003a00:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3
 1003a04:	00 00 00 1d 	l.j 1003a78 <_Start+0x8bc>
 1003a08:	15 00 00 00 	l.nop 0x0
			uart_print_short (blockb[i]);
 1003a0c:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 1003a10:	d7 c2 23 c8 	l.sw 0xfffff3c8(r2),r4
 1003a14:	9c 62 f9 e8 	l.addi r3,r2,0xfffff9e8
 1003a18:	d7 c2 1a 2c 	l.sw 0xfffff22c(r2),r3
 1003a1c:	84 82 f2 2c 	l.lwz r4,0xfffff22c(r2)
 1003a20:	84 62 f3 c8 	l.lwz r3,0xfffff3c8(r2)
 1003a24:	e0 84 18 00 	l.add r4,r4,r3
 1003a28:	d7 c2 22 28 	l.sw 0xfffff228(r2),r4
 1003a2c:	84 82 f2 28 	l.lwz r4,0xfffff228(r2)
 1003a30:	8c 84 00 00 	l.lbz r4,0x0(r4)
 1003a34:	d7 c2 23 cc 	l.sw 0xfffff3cc(r2),r4
 1003a38:	84 62 f3 cc 	l.lwz r3,0xfffff3cc(r2)
 1003a3c:	d7 c2 1b d0 	l.sw 0xfffff3d0(r2),r3
 1003a40:	84 62 f3 d0 	l.lwz r3,0xfffff3d0(r2)
 1003a44:	04 00 01 82 	l.jal 100404c <_uart_print_short>
 1003a48:	15 00 00 00 	l.nop 0x0
			uart_print_str("."); 
 1003a4c:	18 60 01 00 	l.movhi r3,0x100
 1003a50:	a8 63 4f 26 	l.ori r3,r3,0x4f26
 1003a54:	04 00 00 f2 	l.jal 1003e1c <_uart_print_str>
 1003a58:	15 00 00 00 	l.nop 0x0
		  uart_print_long( SD_REG(SD_RESP1)  ) ;  
		  	uart_print_str("\n"); 
			  uart_print_long( SD_REG(BD_ISR)  ) ; 
		    	uart_print_str("\n"); 

   	   for  (i =0; i<512;i++) {
 1003a5c:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 1003a60:	d7 c2 22 24 	l.sw 0xfffff224(r2),r4
 1003a64:	84 62 f2 24 	l.lwz r3,0xfffff224(r2)
 1003a68:	9c 63 00 01 	l.addi r3,r3,0x1
 1003a6c:	d7 c2 1a 20 	l.sw 0xfffff220(r2),r3
 1003a70:	84 82 f2 20 	l.lwz r4,0xfffff220(r2)
 1003a74:	d7 e2 27 f4 	l.sw 0xfffffff4(r2),r4
 1003a78:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003a7c:	d7 c2 1a 1c 	l.sw 0xfffff21c(r2),r3
 1003a80:	84 82 f2 1c 	l.lwz r4,0xfffff21c(r2)
 1003a84:	bd a4 01 ff 	l.sflesi r4,0x1ff
 1003a88:	13 ff ff e1 	l.bf 1003a0c <_Start+0x850>
 1003a8c:	15 00 00 00 	l.nop 0x0
 1003a90:	85 21 00 00 	l.lwz r9,0x0(r1)
 1003a94:	84 41 00 04 	l.lwz r2,0x4(r1)
 1003a98:	44 00 48 00 	l.jr r9
 1003a9c:	9c 21 0d ec 	l.addi r1,r1,0xdec

01003aa0 <_uart_init>:


/*$$FUNCTIONS*/
/******************************************************************************/
/*                                                                            */
/*                          F U N C T I O N S                                 */
 1003aa0:	9c 21 ff 54 	l.addi r1,r1,0xffffff54
 1003aa4:	d4 01 10 00 	l.sw 0x0(r1),r2
 1003aa8:	9c 41 00 ac 	l.addi r2,r1,0xac
/*                                                                            */
/******************************************************************************/


 1003aac:	18 60 90 00 	l.movhi r3,0x9000
 1003ab0:	d7 e2 1f b8 	l.sw 0xffffffb8(r2),r3
 1003ab4:	84 82 ff b8 	l.lwz r4,0xffffffb8(r2)
 1003ab8:	a8 84 00 02 	l.ori r4,r4,0x2
 1003abc:	d7 e2 27 bc 	l.sw 0xffffffbc(r2),r4
 1003ac0:	9c 60 ff c7 	l.addi r3,r0,0xffffffc7
 1003ac4:	d7 e2 1f b4 	l.sw 0xffffffb4(r2),r3
 1003ac8:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 1003acc:	db e2 27 b3 	l.sb 0xffffffb3(r2),r4
 1003ad0:	8c 82 ff b3 	l.lbz r4,0xffffffb3(r2)
 1003ad4:	84 62 ff bc 	l.lwz r3,0xffffffbc(r2)
 1003ad8:	d8 03 20 00 	l.sb 0x0(r3),r4
/******************************************************************************/
/*                        W R I T E  T O EXTERNAL SDRAM 1                     */
/******************************************************************************/
 1003adc:	18 60 90 00 	l.movhi r3,0x9000
 1003ae0:	d7 e2 1f ac 	l.sw 0xffffffac(r2),r3
 1003ae4:	84 82 ff ac 	l.lwz r4,0xffffffac(r2)
 1003ae8:	a8 84 00 01 	l.ori r4,r4,0x1
 1003aec:	d7 e2 27 c0 	l.sw 0xffffffc0(r2),r4
 1003af0:	9c 60 00 00 	l.addi r3,r0,0x0
 1003af4:	d7 e2 1f a8 	l.sw 0xffffffa8(r2),r3
 1003af8:	84 82 ff a8 	l.lwz r4,0xffffffa8(r2)
 1003afc:	db e2 27 a7 	l.sb 0xffffffa7(r2),r4
 1003b00:	8c 82 ff a7 	l.lbz r4,0xffffffa7(r2)
 1003b04:	84 62 ff c0 	l.lwz r3,0xffffffc0(r2)
 1003b08:	d8 03 20 00 	l.sb 0x0(r3),r4

// Write to External SDRAM  
void Write_External_SDRAM_1(void)
 1003b0c:	18 60 90 00 	l.movhi r3,0x9000
 1003b10:	d7 e2 1f a0 	l.sw 0xffffffa0(r2),r3
 1003b14:	84 82 ff a0 	l.lwz r4,0xffffffa0(r2)
 1003b18:	a8 84 00 03 	l.ori r4,r4,0x3
 1003b1c:	d7 e2 27 c4 	l.sw 0xffffffc4(r2),r4
 1003b20:	9c 60 00 03 	l.addi r3,r0,0x3
 1003b24:	d7 e2 1f 9c 	l.sw 0xffffff9c(r2),r3
 1003b28:	84 82 ff 9c 	l.lwz r4,0xffffff9c(r2)
 1003b2c:	db e2 27 9b 	l.sb 0xffffff9b(r2),r4
 1003b30:	8c 82 ff 9b 	l.lbz r4,0xffffff9b(r2)
 1003b34:	84 62 ff c4 	l.lwz r3,0xffffffc4(r2)
 1003b38:	d8 03 20 00 	l.sb 0x0(r3),r4
{   
   uint32      i;
   uint32      read;
 1003b3c:	9c 60 00 0d 	l.addi r3,r0,0xd
 1003b40:	d7 e2 1f 94 	l.sw 0xffffff94(r2),r3
 1003b44:	84 82 ff 94 	l.lwz r4,0xffffff94(r2)
 1003b48:	d7 e2 27 fc 	l.sw 0xfffffffc(r2),r4
   uint32      range;
 1003b4c:	18 60 90 00 	l.movhi r3,0x9000
 1003b50:	d7 e2 1f 90 	l.sw 0xffffff90(r2),r3
 1003b54:	84 82 ff 90 	l.lwz r4,0xffffff90(r2)
 1003b58:	a8 84 00 03 	l.ori r4,r4,0x3
 1003b5c:	d7 e2 27 c8 	l.sw 0xffffffc8(r2),r4
 1003b60:	18 60 90 00 	l.movhi r3,0x9000
 1003b64:	d7 e2 1f 8c 	l.sw 0xffffff8c(r2),r3
 1003b68:	84 82 ff 8c 	l.lwz r4,0xffffff8c(r2)
 1003b6c:	a8 84 00 03 	l.ori r4,r4,0x3
 1003b70:	d7 e2 27 cc 	l.sw 0xffffffcc(r2),r4
 1003b74:	84 62 ff cc 	l.lwz r3,0xffffffcc(r2)
 1003b78:	8c 63 00 00 	l.lbz r3,0x0(r3)
 1003b7c:	db e2 1f 8b 	l.sb 0xffffff8b(r2),r3
 1003b80:	8c 82 ff 8b 	l.lbz r4,0xffffff8b(r2)
 1003b84:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 1003b88:	9c 80 ff 80 	l.addi r4,r0,0xffffff80
 1003b8c:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 1003b90:	e0 83 20 04 	l.or r4,r3,r4
 1003b94:	d7 e2 27 84 	l.sw 0xffffff84(r2),r4
 1003b98:	84 62 ff 84 	l.lwz r3,0xffffff84(r2)
 1003b9c:	a4 63 00 ff 	l.andi r3,r3,0xff
 1003ba0:	d7 e2 1f d4 	l.sw 0xffffffd4(r2),r3
 1003ba4:	84 82 ff d4 	l.lwz r4,0xffffffd4(r2)
 1003ba8:	db e2 27 83 	l.sb 0xffffff83(r2),r4
 1003bac:	8c 82 ff 83 	l.lbz r4,0xffffff83(r2)
 1003bb0:	84 62 ff c8 	l.lwz r3,0xffffffc8(r2)
 1003bb4:	d8 03 20 00 	l.sb 0x0(r3),r4
   uint32      adr_offset;
 1003bb8:	18 60 90 00 	l.movhi r3,0x9000
 1003bbc:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 1003bc0:	84 82 ff fc 	l.lwz r4,0xfffffffc(r2)
 1003bc4:	d7 e2 27 7c 	l.sw 0xffffff7c(r2),r4
 1003bc8:	84 62 ff 7c 	l.lwz r3,0xffffff7c(r2)
 1003bcc:	a4 63 00 ff 	l.andi r3,r3,0xff
 1003bd0:	d7 e2 1f dc 	l.sw 0xffffffdc(r2),r3
 1003bd4:	84 82 ff dc 	l.lwz r4,0xffffffdc(r2)
 1003bd8:	db e2 27 7b 	l.sb 0xffffff7b(r2),r4
 1003bdc:	8c 82 ff 7b 	l.lbz r4,0xffffff7b(r2)
 1003be0:	84 62 ff d8 	l.lwz r3,0xffffffd8(r2)
 1003be4:	d8 03 20 00 	l.sb 0x0(r3),r4

 1003be8:	18 60 90 00 	l.movhi r3,0x9000
 1003bec:	d7 e2 1f 74 	l.sw 0xffffff74(r2),r3
 1003bf0:	84 82 ff 74 	l.lwz r4,0xffffff74(r2)
 1003bf4:	a8 84 00 01 	l.ori r4,r4,0x1
 1003bf8:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 1003bfc:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1003c00:	d7 e2 1f 70 	l.sw 0xffffff70(r2),r3
 1003c04:	84 82 ff 70 	l.lwz r4,0xffffff70(r2)
 1003c08:	b8 84 00 88 	l.srai r4,r4,0x8
 1003c0c:	d7 e2 27 e4 	l.sw 0xffffffe4(r2),r4
 1003c10:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 1003c14:	a4 63 00 ff 	l.andi r3,r3,0xff
 1003c18:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
 1003c1c:	84 82 ff e8 	l.lwz r4,0xffffffe8(r2)
 1003c20:	db e2 27 6f 	l.sb 0xffffff6f(r2),r4
 1003c24:	8c 82 ff 6f 	l.lbz r4,0xffffff6f(r2)
 1003c28:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 1003c2c:	d8 03 20 00 	l.sb 0x0(r3),r4
   range      = 0x7ff;        // Max range: 0x7fffff
 1003c30:	18 60 90 00 	l.movhi r3,0x9000
 1003c34:	d7 e2 1f 68 	l.sw 0xffffff68(r2),r3
 1003c38:	84 82 ff 68 	l.lwz r4,0xffffff68(r2)
 1003c3c:	a8 84 00 03 	l.ori r4,r4,0x3
 1003c40:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
 1003c44:	18 60 90 00 	l.movhi r3,0x9000
 1003c48:	d7 e2 1f 64 	l.sw 0xffffff64(r2),r3
 1003c4c:	84 82 ff 64 	l.lwz r4,0xffffff64(r2)
 1003c50:	a8 84 00 03 	l.ori r4,r4,0x3
 1003c54:	d7 e2 27 f0 	l.sw 0xfffffff0(r2),r4
 1003c58:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1003c5c:	8c 63 00 00 	l.lbz r3,0x0(r3)
 1003c60:	db e2 1f 63 	l.sb 0xffffff63(r2),r3
 1003c64:	8c 82 ff 63 	l.lbz r4,0xffffff63(r2)
 1003c68:	d7 e2 27 f4 	l.sw 0xfffffff4(r2),r4
 1003c6c:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003c70:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
 1003c74:	9c 80 00 7f 	l.addi r4,r0,0x7f
 1003c78:	d7 e2 27 5c 	l.sw 0xffffff5c(r2),r4
 1003c7c:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1003c80:	84 82 ff 5c 	l.lwz r4,0xffffff5c(r2)
 1003c84:	e0 63 20 03 	l.and r3,r3,r4
 1003c88:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
 1003c8c:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1003c90:	db e2 1f 5b 	l.sb 0xffffff5b(r2),r3
 1003c94:	8c 62 ff 5b 	l.lbz r3,0xffffff5b(r2)
 1003c98:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 1003c9c:	d8 04 18 00 	l.sb 0x0(r4),r3
 1003ca0:	84 41 00 00 	l.lwz r2,0x0(r1)
 1003ca4:	44 00 48 00 	l.jr r9
 1003ca8:	9c 21 00 ac 	l.addi r1,r1,0xac

01003cac <_uart_putc>:
   adr_offset = 0x00000000;  // External memory offset
   
   for (i=0x0; i < range; i=i+4) {
      REG32(adr_offset + i)   = (adr_offset + i);
   }

 1003cac:	9c 21 ff 98 	l.addi r1,r1,0xffffff98
 1003cb0:	d4 01 10 00 	l.sw 0x0(r1),r2
 1003cb4:	9c 41 00 68 	l.addi r2,r1,0x68
 1003cb8:	d7 e2 1f c4 	l.sw 0xffffffc4(r2),r3
 1003cbc:	84 62 ff c4 	l.lwz r3,0xffffffc4(r2)
 1003cc0:	db e2 1f c3 	l.sb 0xffffffc3(r2),r3
 1003cc4:	8c 82 ff c3 	l.lbz r4,0xffffffc3(r2)
 1003cc8:	db e2 27 f8 	l.sb 0xfffffff8(r2),r4
   for (i=0x0; i < range; i=i+4) {
     read = REG32(adr_offset + i);
     if (read != (adr_offset + i)) {
 1003ccc:	18 60 90 00 	l.movhi r3,0x9000
 1003cd0:	d7 e2 1f bc 	l.sw 0xffffffbc(r2),r3
 1003cd4:	84 82 ff bc 	l.lwz r4,0xffffffbc(r2)
 1003cd8:	a8 84 00 05 	l.ori r4,r4,0x5
 1003cdc:	d7 e2 27 c8 	l.sw 0xffffffc8(r2),r4
 1003ce0:	84 62 ff c8 	l.lwz r3,0xffffffc8(r2)
 1003ce4:	8c 63 00 00 	l.lbz r3,0x0(r3)
 1003ce8:	db e2 1f bb 	l.sb 0xffffffbb(r2),r3
 1003cec:	8c 82 ff bb 	l.lbz r4,0xffffffbb(r2)
 1003cf0:	db e2 27 ff 	l.sb 0xffffffff(r2),r4
 1003cf4:	8c 62 ff ff 	l.lbz r3,0xffffffff(r2)
 1003cf8:	d7 e2 1f cc 	l.sw 0xffffffcc(r2),r3
 1003cfc:	84 82 ff cc 	l.lwz r4,0xffffffcc(r2)
 1003d00:	a4 84 00 20 	l.andi r4,r4,0x20
 1003d04:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 1003d08:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 1003d0c:	bc 03 00 00 	l.sfeqi r3,0x0
 1003d10:	13 ff ff ef 	l.bf 1003ccc <_uart_putc+0x20>
 1003d14:	15 00 00 00 	l.nop 0x0
       while(TRUE){            //ERROR=HALT PROCESSOR 
 1003d18:	18 80 90 00 	l.movhi r4,0x9000
 1003d1c:	d7 e2 27 d4 	l.sw 0xffffffd4(r2),r4
 1003d20:	8c 62 ff f8 	l.lbz r3,0xfffffff8(r2)
 1003d24:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 1003d28:	84 82 ff d8 	l.lwz r4,0xffffffd8(r2)
 1003d2c:	db e2 27 ba 	l.sb 0xffffffba(r2),r4
 1003d30:	8c 82 ff ba 	l.lbz r4,0xffffffba(r2)
 1003d34:	84 62 ff d4 	l.lwz r3,0xffffffd4(r2)
 1003d38:	d8 03 20 00 	l.sb 0x0(r3),r4
       }       
 1003d3c:	90 62 ff f8 	l.lbs r3,0xfffffff8(r2)
 1003d40:	d7 e2 1f b4 	l.sw 0xffffffb4(r2),r3
 1003d44:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 1003d48:	bc 24 00 0a 	l.sfnei r4,0xa
 1003d4c:	10 00 00 1e 	l.bf 1003dc4 <_uart_putc+0x118>
 1003d50:	15 00 00 00 	l.nop 0x0
     }
 1003d54:	18 60 90 00 	l.movhi r3,0x9000
 1003d58:	d7 e2 1f b0 	l.sw 0xffffffb0(r2),r3
 1003d5c:	84 82 ff b0 	l.lwz r4,0xffffffb0(r2)
 1003d60:	a8 84 00 05 	l.ori r4,r4,0x5
 1003d64:	d7 e2 27 dc 	l.sw 0xffffffdc(r2),r4
 1003d68:	84 62 ff dc 	l.lwz r3,0xffffffdc(r2)
 1003d6c:	8c 63 00 00 	l.lbz r3,0x0(r3)
 1003d70:	db e2 1f af 	l.sb 0xffffffaf(r2),r3
 1003d74:	8c 82 ff af 	l.lbz r4,0xffffffaf(r2)
 1003d78:	db e2 27 ff 	l.sb 0xffffffff(r2),r4
 1003d7c:	8c 62 ff ff 	l.lbz r3,0xffffffff(r2)
 1003d80:	d7 e2 1f e0 	l.sw 0xffffffe0(r2),r3
 1003d84:	84 82 ff e0 	l.lwz r4,0xffffffe0(r2)
 1003d88:	a4 84 00 20 	l.andi r4,r4,0x20
 1003d8c:	d7 e2 27 e4 	l.sw 0xffffffe4(r2),r4
 1003d90:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 1003d94:	bc 03 00 00 	l.sfeqi r3,0x0
 1003d98:	13 ff ff ef 	l.bf 1003d54 <_uart_putc+0xa8>
 1003d9c:	15 00 00 00 	l.nop 0x0
   }
 1003da0:	18 80 90 00 	l.movhi r4,0x9000
 1003da4:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
 1003da8:	9c 60 00 0d 	l.addi r3,r0,0xd
 1003dac:	d7 e2 1f a8 	l.sw 0xffffffa8(r2),r3
 1003db0:	84 82 ff a8 	l.lwz r4,0xffffffa8(r2)
 1003db4:	db e2 27 a7 	l.sb 0xffffffa7(r2),r4
 1003db8:	8c 82 ff a7 	l.lbz r4,0xffffffa7(r2)
 1003dbc:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1003dc0:	d8 03 20 00 	l.sb 0x0(r3),r4
}

 1003dc4:	18 60 90 00 	l.movhi r3,0x9000
 1003dc8:	d7 e2 1f a0 	l.sw 0xffffffa0(r2),r3
 1003dcc:	84 82 ff a0 	l.lwz r4,0xffffffa0(r2)
 1003dd0:	a8 84 00 05 	l.ori r4,r4,0x5
 1003dd4:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
 1003dd8:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1003ddc:	8c 63 00 00 	l.lbz r3,0x0(r3)
 1003de0:	db e2 1f 9f 	l.sb 0xffffff9f(r2),r3
 1003de4:	8c 82 ff 9f 	l.lbz r4,0xffffff9f(r2)
 1003de8:	db e2 27 ff 	l.sb 0xffffffff(r2),r4
 1003dec:	8c 62 ff ff 	l.lbz r3,0xffffffff(r2)
 1003df0:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 1003df4:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 1003df8:	a4 84 00 60 	l.andi r4,r4,0x60
 1003dfc:	d7 e2 27 f4 	l.sw 0xfffffff4(r2),r4
 1003e00:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003e04:	bc 23 00 60 	l.sfnei r3,0x60
 1003e08:	13 ff ff ef 	l.bf 1003dc4 <_uart_putc+0x118>
 1003e0c:	15 00 00 00 	l.nop 0x0
 1003e10:	84 41 00 00 	l.lwz r2,0x0(r1)
 1003e14:	44 00 48 00 	l.jr r9
 1003e18:	9c 21 00 68 	l.addi r1,r1,0x68

01003e1c <_uart_print_str>:

/*$$EXTERNAL EXEPTIONS*/
/******************************************************************************/
/*                  E X T E R N A L   E X E P T I O N S                       */
 1003e1c:	9c 21 ff d8 	l.addi r1,r1,0xffffffd8
 1003e20:	d4 01 10 04 	l.sw 0x4(r1),r2
 1003e24:	9c 41 00 28 	l.addi r2,r1,0x28
 1003e28:	d4 01 48 00 	l.sw 0x0(r1),r9
 1003e2c:	d7 e2 1f fc 	l.sw 0xfffffffc(r2),r3
/******************************************************************************/
 1003e30:	00 00 00 13 	l.j 1003e7c <_uart_print_str+0x60>
 1003e34:	15 00 00 00 	l.nop 0x0

 1003e38:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1003e3c:	d7 e2 1f ec 	l.sw 0xffffffec(r2),r3
 1003e40:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1003e44:	90 63 00 00 	l.lbs r3,0x0(r3)
 1003e48:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 1003e4c:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1003e50:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3
 1003e54:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003e58:	07 ff ff 95 	l.jal 1003cac <_uart_putc>
 1003e5c:	15 00 00 00 	l.nop 0x0

 1003e60:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1003e64:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
 1003e68:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1003e6c:	9c 63 00 01 	l.addi r3,r3,0x1
 1003e70:	d7 e2 1f e4 	l.sw 0xffffffe4(r2),r3
 1003e74:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 1003e78:	d7 e2 1f fc 	l.sw 0xfffffffc(r2),r3


/*$$EXTERNAL EXEPTIONS*/
/******************************************************************************/
/*                  E X T E R N A L   E X E P T I O N S                       */
/******************************************************************************/
 1003e7c:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1003e80:	d7 e2 1f e0 	l.sw 0xffffffe0(r2),r3
 1003e84:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 1003e88:	90 63 00 00 	l.lbs r3,0x0(r3)
 1003e8c:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
 1003e90:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1003e94:	bc 23 00 00 	l.sfnei r3,0x0
 1003e98:	13 ff ff e8 	l.bf 1003e38 <_uart_print_str+0x1c>
 1003e9c:	15 00 00 00 	l.nop 0x0
 1003ea0:	85 21 00 00 	l.lwz r9,0x0(r1)
 1003ea4:	84 41 00 04 	l.lwz r2,0x4(r1)
 1003ea8:	44 00 48 00 	l.jr r9
 1003eac:	9c 21 00 28 	l.addi r1,r1,0x28

01003eb0 <_uart_print_long>:
void external_exeption()
{      
  REG uint8 i;
  REG uint32 PicSr,sr;

}
 1003eb0:	9c 21 ff 8c 	l.addi r1,r1,0xffffff8c
 1003eb4:	d4 01 10 04 	l.sw 0x4(r1),r2
 1003eb8:	9c 41 00 74 	l.addi r2,r1,0x74
 1003ebc:	d4 01 48 00 	l.sw 0x0(r1),r9
 1003ec0:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3
 
/*$$MAIN*/
/******************************************************************************/
/*                                                                            */
 1003ec4:	18 60 01 00 	l.movhi r3,0x100
 1003ec8:	a8 63 4f 28 	l.ori r3,r3,0x4f28
 1003ecc:	07 ff ff d4 	l.jal 1003e1c <_uart_print_str>
 1003ed0:	15 00 00 00 	l.nop 0x0
/*                       M A I N   P R O G R A M                              */
/*                                                                            */
 1003ed4:	9c 60 00 00 	l.addi r3,r0,0x0
 1003ed8:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
 1003edc:	00 00 00 52 	l.j 1004024 <_uart_print_long+0x174>
 1003ee0:	15 00 00 00 	l.nop 0x0
/******************************************************************************/
 1003ee4:	9c 80 00 07 	l.addi r4,r0,0x7
 1003ee8:	d7 e2 27 cc 	l.sw 0xffffffcc(r2),r4
 1003eec:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1003ef0:	d7 e2 1f c8 	l.sw 0xffffffc8(r2),r3
 1003ef4:	84 82 ff cc 	l.lwz r4,0xffffffcc(r2)
 1003ef8:	84 62 ff c8 	l.lwz r3,0xffffffc8(r2)
 1003efc:	e0 84 18 02 	l.sub r4,r4,r3
 1003f00:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 1003f04:	84 82 ff d0 	l.lwz r4,0xffffffd0(r2)
 1003f08:	b8 84 00 02 	l.slli r4,r4,0x2
 1003f0c:	d7 e2 27 d4 	l.sw 0xffffffd4(r2),r4
 1003f10:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1003f14:	d7 e2 1f c4 	l.sw 0xffffffc4(r2),r3
 1003f18:	84 82 ff c4 	l.lwz r4,0xffffffc4(r2)
 1003f1c:	84 62 ff d4 	l.lwz r3,0xffffffd4(r2)
 1003f20:	e0 84 18 48 	l.srl r4,r4,r3
 1003f24:	d7 e2 27 d8 	l.sw 0xffffffd8(r2),r4
 1003f28:	84 82 ff d8 	l.lwz r4,0xffffffd8(r2)
 1003f2c:	b8 84 00 18 	l.slli r4,r4,0x18
 1003f30:	d7 e2 27 c0 	l.sw 0xffffffc0(r2),r4
 1003f34:	84 62 ff c0 	l.lwz r3,0xffffffc0(r2)
 1003f38:	b8 63 00 98 	l.srai r3,r3,0x18
 1003f3c:	d7 e2 1f dc 	l.sw 0xffffffdc(r2),r3
 1003f40:	84 82 ff dc 	l.lwz r4,0xffffffdc(r2)
 1003f44:	a4 84 00 0f 	l.andi r4,r4,0xf
 1003f48:	d7 e2 27 bc 	l.sw 0xffffffbc(r2),r4
 1003f4c:	84 62 ff bc 	l.lwz r3,0xffffffbc(r2)
 1003f50:	db e2 1f bb 	l.sb 0xffffffbb(r2),r3
 1003f54:	8c 82 ff bb 	l.lbz r4,0xffffffbb(r2)
 1003f58:	db e2 27 ff 	l.sb 0xffffffff(r2),r4

 1003f5c:	90 62 ff ff 	l.lbs r3,0xffffffff(r2)
 1003f60:	d7 e2 1f b4 	l.sw 0xffffffb4(r2),r3
 1003f64:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 1003f68:	bd 84 00 00 	l.sfltsi r4,0x0
 1003f6c:	10 00 00 16 	l.bf 1003fc4 <_uart_print_long+0x114>
 1003f70:	15 00 00 00 	l.nop 0x0
 1003f74:	90 62 ff ff 	l.lbs r3,0xffffffff(r2)
 1003f78:	d7 e2 1f b0 	l.sw 0xffffffb0(r2),r3
 1003f7c:	84 82 ff b0 	l.lwz r4,0xffffffb0(r2)
 1003f80:	bd 44 00 09 	l.sfgtsi r4,0x9
 1003f84:	10 00 00 10 	l.bf 1003fc4 <_uart_print_long+0x114>
 1003f88:	15 00 00 00 	l.nop 0x0
struct sd_card_csr {
 1003f8c:	8c 62 ff ff 	l.lbz r3,0xffffffff(r2)
 1003f90:	d7 e2 1f e0 	l.sw 0xffffffe0(r2),r3
 1003f94:	84 82 ff e0 	l.lwz r4,0xffffffe0(r2)
 1003f98:	9c 84 00 30 	l.addi r4,r4,0x30
 1003f9c:	d7 e2 27 ac 	l.sw 0xffffffac(r2),r4
 1003fa0:	84 62 ff ac 	l.lwz r3,0xffffffac(r2)
 1003fa4:	a4 63 00 ff 	l.andi r3,r3,0xff
 1003fa8:	d7 e2 1f e4 	l.sw 0xffffffe4(r2),r3
 1003fac:	84 82 ff e4 	l.lwz r4,0xffffffe4(r2)
 1003fb0:	db e2 27 ab 	l.sb 0xffffffab(r2),r4
 1003fb4:	8c 62 ff ab 	l.lbz r3,0xffffffab(r2)
 1003fb8:	db e2 1f ff 	l.sb 0xffffffff(r2),r3
/******************************************************************************/
/*                                                                            */
/*                       M A I N   P R O G R A M                              */
/*                                                                            */
/******************************************************************************/

 1003fbc:	00 00 00 0e 	l.j 1003ff4 <_uart_print_long+0x144>
 1003fc0:	15 00 00 00 	l.nop 0x0
struct sd_card_csr {
unsigned int PAD:18;
unsigned  int CMDI:6;
 1003fc4:	8c 82 ff ff 	l.lbz r4,0xffffffff(r2)
 1003fc8:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
 1003fcc:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1003fd0:	9c 63 00 57 	l.addi r3,r3,0x57
 1003fd4:	d7 e2 1f a4 	l.sw 0xffffffa4(r2),r3
 1003fd8:	84 82 ff a4 	l.lwz r4,0xffffffa4(r2)
 1003fdc:	a4 84 00 ff 	l.andi r4,r4,0xff
 1003fe0:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
 1003fe4:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1003fe8:	db e2 1f a3 	l.sb 0xffffffa3(r2),r3
 1003fec:	8c 82 ff a3 	l.lbz r4,0xffffffa3(r2)
 1003ff0:	db e2 27 ff 	l.sb 0xffffffff(r2),r4
unsigned  int CMDT:2;
 1003ff4:	90 62 ff ff 	l.lbs r3,0xffffffff(r2)
 1003ff8:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 1003ffc:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004000:	07 ff ff 2b 	l.jal 1003cac <_uart_putc>
 1004004:	15 00 00 00 	l.nop 0x0
 
/*$$MAIN*/
/******************************************************************************/
/*                                                                            */
/*                       M A I N   P R O G R A M                              */
/*                                                                            */
 1004008:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 100400c:	d7 e2 27 9c 	l.sw 0xffffff9c(r2),r4
 1004010:	84 62 ff 9c 	l.lwz r3,0xffffff9c(r2)
 1004014:	9c 63 00 01 	l.addi r3,r3,0x1
 1004018:	d7 e2 1f 98 	l.sw 0xffffff98(r2),r3
 100401c:	84 82 ff 98 	l.lwz r4,0xffffff98(r2)
 1004020:	d7 e2 27 f8 	l.sw 0xfffffff8(r2),r4
 1004024:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1004028:	d7 e2 1f 94 	l.sw 0xffffff94(r2),r3
 100402c:	84 82 ff 94 	l.lwz r4,0xffffff94(r2)
 1004030:	bd a4 00 07 	l.sflesi r4,0x7
 1004034:	13 ff ff ac 	l.bf 1003ee4 <_uart_print_long+0x34>
 1004038:	15 00 00 00 	l.nop 0x0
 100403c:	85 21 00 00 	l.lwz r9,0x0(r1)
 1004040:	84 41 00 04 	l.lwz r2,0x4(r1)
 1004044:	44 00 48 00 	l.jr r9
 1004048:	9c 21 00 74 	l.addi r1,r1,0x74

0100404c <_uart_print_short>:
unsigned  int DPS:1;
unsigned  int CICE_s:1;
unsigned  int CRCE_s:1;
unsigned  int  RSVD:1;
unsigned  int RTS:2;
} ;
 100404c:	9c 21 ff 70 	l.addi r1,r1,0xffffff70
 1004050:	d4 01 10 04 	l.sw 0x4(r1),r2
 1004054:	9c 41 00 90 	l.addi r2,r1,0x90
 1004058:	d4 01 48 00 	l.sw 0x0(r1),r9
 100405c:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3



 1004060:	9c 60 00 00 	l.addi r3,r0,0x0
 1004064:	d7 e2 1f cc 	l.sw 0xffffffcc(r2),r3
 1004068:	84 82 ff cc 	l.lwz r4,0xffffffcc(r2)
 100406c:	db e2 27 cb 	l.sb 0xffffffcb(r2),r4
 1004070:	8c 62 ff cb 	l.lbz r3,0xffffffcb(r2)
 1004074:	db e2 1f ff 	l.sb 0xffffffff(r2),r3


 1004078:	18 60 01 00 	l.movhi r3,0x100
 100407c:	a8 63 4f 28 	l.ori r3,r3,0x4f28
 1004080:	07 ff ff 67 	l.jal 1003e1c <_uart_print_str>
 1004084:	15 00 00 00 	l.nop 0x0
//TO do
// Always check if error in repose (CRC, CICE) etc
 1004088:	9c 80 00 00 	l.addi r4,r0,0x0
 100408c:	d7 e2 27 f8 	l.sw 0xfffffff8(r2),r4
 1004090:	00 00 00 6a 	l.j 1004238 <_uart_print_short+0x1ec>
 1004094:	15 00 00 00 	l.nop 0x0
// Always check for CICM (Command inhibit before senindg)
 1004098:	9c 60 00 07 	l.addi r3,r0,0x7
 100409c:	d7 e2 1f c4 	l.sw 0xffffffc4(r2),r3
 10040a0:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 10040a4:	d7 e2 27 c0 	l.sw 0xffffffc0(r2),r4
 10040a8:	84 62 ff c4 	l.lwz r3,0xffffffc4(r2)
 10040ac:	84 82 ff c0 	l.lwz r4,0xffffffc0(r2)
 10040b0:	e0 63 20 02 	l.sub r3,r3,r4
 10040b4:	d7 e2 1f d0 	l.sw 0xffffffd0(r2),r3
 10040b8:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 10040bc:	b8 63 00 02 	l.slli r3,r3,0x2
 10040c0:	d7 e2 1f d4 	l.sw 0xffffffd4(r2),r3
 10040c4:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 10040c8:	d7 e2 27 bc 	l.sw 0xffffffbc(r2),r4
 10040cc:	84 62 ff bc 	l.lwz r3,0xffffffbc(r2)
 10040d0:	84 82 ff d4 	l.lwz r4,0xffffffd4(r2)
 10040d4:	e0 63 20 48 	l.srl r3,r3,r4
 10040d8:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 10040dc:	84 62 ff d8 	l.lwz r3,0xffffffd8(r2)
 10040e0:	b8 63 00 18 	l.slli r3,r3,0x18
 10040e4:	d7 e2 1f b8 	l.sw 0xffffffb8(r2),r3
 10040e8:	84 82 ff b8 	l.lwz r4,0xffffffb8(r2)
 10040ec:	b8 84 00 98 	l.srai r4,r4,0x18
 10040f0:	d7 e2 27 dc 	l.sw 0xffffffdc(r2),r4
 10040f4:	84 62 ff dc 	l.lwz r3,0xffffffdc(r2)
 10040f8:	a4 63 00 0f 	l.andi r3,r3,0xf
 10040fc:	d7 e2 1f b4 	l.sw 0xffffffb4(r2),r3
 1004100:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 1004104:	db e2 27 b3 	l.sb 0xffffffb3(r2),r4
 1004108:	8c 62 ff b3 	l.lbz r3,0xffffffb3(r2)
 100410c:	db e2 1f fe 	l.sb 0xfffffffe(r2),r3
// Timeout when polling
// Divied into dividing Functions
 1004110:	90 82 ff fe 	l.lbs r4,0xfffffffe(r2)
 1004114:	d7 e2 27 ac 	l.sw 0xffffffac(r2),r4
 1004118:	84 62 ff ac 	l.lwz r3,0xffffffac(r2)
 100411c:	bd 83 00 00 	l.sfltsi r3,0x0
 1004120:	10 00 00 16 	l.bf 1004178 <_uart_print_short+0x12c>
 1004124:	15 00 00 00 	l.nop 0x0
 1004128:	90 82 ff fe 	l.lbs r4,0xfffffffe(r2)
 100412c:	d7 e2 27 a8 	l.sw 0xffffffa8(r2),r4
 1004130:	84 62 ff a8 	l.lwz r3,0xffffffa8(r2)
 1004134:	bd 43 00 09 	l.sfgtsi r3,0x9
 1004138:	10 00 00 10 	l.bf 1004178 <_uart_print_short+0x12c>
 100413c:	15 00 00 00 	l.nop 0x0
// Clean up
 1004140:	8c 82 ff fe 	l.lbz r4,0xfffffffe(r2)
 1004144:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 1004148:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 100414c:	9c 63 00 30 	l.addi r3,r3,0x30
 1004150:	d7 e2 1f a4 	l.sw 0xffffffa4(r2),r3
 1004154:	84 82 ff a4 	l.lwz r4,0xffffffa4(r2)
 1004158:	a4 84 00 ff 	l.andi r4,r4,0xff
 100415c:	d7 e2 27 e4 	l.sw 0xffffffe4(r2),r4
 1004160:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 1004164:	db e2 1f a3 	l.sb 0xffffffa3(r2),r3
 1004168:	8c 82 ff a3 	l.lbz r4,0xffffffa3(r2)
 100416c:	db e2 27 fe 	l.sb 0xfffffffe(r2),r4

//TO do
// Always check if error in repose (CRC, CICE) etc
// Always check for CICM (Command inhibit before senindg)
// Timeout when polling
// Divied into dividing Functions
 1004170:	00 00 00 0e 	l.j 10041a8 <_uart_print_short+0x15c>
 1004174:	15 00 00 00 	l.nop 0x0
// Clean up

//#define TX
 1004178:	8c 62 ff fe 	l.lbz r3,0xfffffffe(r2)
 100417c:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
 1004180:	84 82 ff e8 	l.lwz r4,0xffffffe8(r2)
 1004184:	9c 84 00 57 	l.addi r4,r4,0x57
 1004188:	d7 e2 27 9c 	l.sw 0xffffff9c(r2),r4
 100418c:	84 62 ff 9c 	l.lwz r3,0xffffff9c(r2)
 1004190:	a4 63 00 ff 	l.andi r3,r3,0xff
 1004194:	d7 e2 1f ec 	l.sw 0xffffffec(r2),r3
 1004198:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 100419c:	db e2 27 9b 	l.sb 0xffffff9b(r2),r4
 10041a0:	8c 62 ff 9b 	l.lbz r3,0xffffff9b(r2)
 10041a4:	db e2 1f fe 	l.sb 0xfffffffe(r2),r3
#define RX
//#define BOTH
 10041a8:	90 82 ff fe 	l.lbs r4,0xfffffffe(r2)
 10041ac:	d7 e2 27 94 	l.sw 0xffffff94(r2),r4
 10041b0:	84 62 ff 94 	l.lwz r3,0xffffff94(r2)
 10041b4:	bc 23 00 30 	l.sfnei r3,0x30
 10041b8:	10 00 00 08 	l.bf 10041d8 <_uart_print_short+0x18c>
 10041bc:	15 00 00 00 	l.nop 0x0
 10041c0:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 10041c4:	d7 e2 27 90 	l.sw 0xffffff90(r2),r4
 10041c8:	84 62 ff 90 	l.lwz r3,0xffffff90(r2)
 10041cc:	bc 23 00 07 	l.sfnei r3,0x7
 10041d0:	10 00 00 08 	l.bf 10041f0 <_uart_print_short+0x1a4>
 10041d4:	15 00 00 00 	l.nop 0x0
//#define  DB_BOTH
 10041d8:	9c 80 00 01 	l.addi r4,r0,0x1
 10041dc:	d7 e2 27 8c 	l.sw 0xffffff8c(r2),r4
 10041e0:	84 62 ff 8c 	l.lwz r3,0xffffff8c(r2)
 10041e4:	db e2 1f 8b 	l.sb 0xffffff8b(r2),r3
 10041e8:	8c 82 ff 8b 	l.lbz r4,0xffffff8b(r2)
 10041ec:	db e2 27 ff 	l.sb 0xffffffff(r2),r4

void Start()
 10041f0:	90 62 ff ff 	l.lbs r3,0xffffffff(r2)
 10041f4:	d7 e2 1f 84 	l.sw 0xffffff84(r2),r3
 10041f8:	84 82 ff 84 	l.lwz r4,0xffffff84(r2)
 10041fc:	bc 04 00 00 	l.sfeqi r4,0x0
 1004200:	10 00 00 07 	l.bf 100421c <_uart_print_short+0x1d0>
 1004204:	15 00 00 00 	l.nop 0x0
{
 1004208:	90 62 ff fe 	l.lbs r3,0xfffffffe(r2)
 100420c:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 1004210:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004214:	07 ff fe a6 	l.jal 1003cac <_uart_putc>
 1004218:	15 00 00 00 	l.nop 0x0




//TO do
// Always check if error in repose (CRC, CICE) etc
 100421c:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 1004220:	d7 e2 27 80 	l.sw 0xffffff80(r2),r4
 1004224:	84 62 ff 80 	l.lwz r3,0xffffff80(r2)
 1004228:	9c 63 00 01 	l.addi r3,r3,0x1
 100422c:	d7 e2 1f 7c 	l.sw 0xffffff7c(r2),r3
 1004230:	84 82 ff 7c 	l.lwz r4,0xffffff7c(r2)
 1004234:	d7 e2 27 f8 	l.sw 0xfffffff8(r2),r4
 1004238:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 100423c:	d7 e2 1f 78 	l.sw 0xffffff78(r2),r3
 1004240:	84 82 ff 78 	l.lwz r4,0xffffff78(r2)
 1004244:	bd a4 00 07 	l.sflesi r4,0x7
 1004248:	13 ff ff 94 	l.bf 1004098 <_uart_print_short+0x4c>
 100424c:	15 00 00 00 	l.nop 0x0
 1004250:	85 21 00 00 	l.lwz r9,0x0(r1)
 1004254:	84 41 00 04 	l.lwz r2,0x4(r1)
 1004258:	44 00 48 00 	l.jr r9
 100425c:	9c 21 00 90 	l.addi r1,r1,0x90

01004260 <_uart_getc>:

  volatile unsigned long rtn_reg=0;
   volatile  unsigned long rtn_reg1=0;
   
   int i;
   unsigned char block[512];
 1004260:	9c 21 ff d4 	l.addi r1,r1,0xffffffd4
 1004264:	d4 01 10 00 	l.sw 0x0(r1),r2
 1004268:	9c 41 00 2c 	l.addi r2,r1,0x2c
    unsigned char blocka[512];
	    unsigned char blockb[512];
		
		   unsigned char rec_block[512];
 100426c:	18 60 90 00 	l.movhi r3,0x9000
 1004270:	d7 e2 1f dc 	l.sw 0xffffffdc(r2),r3
 1004274:	84 62 ff dc 	l.lwz r3,0xffffffdc(r2)
 1004278:	a8 63 00 05 	l.ori r3,r3,0x5
 100427c:	d7 e2 1f e4 	l.sw 0xffffffe4(r2),r3
 1004280:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 1004284:	8c 63 00 00 	l.lbz r3,0x0(r3)
 1004288:	db e2 1f db 	l.sb 0xffffffdb(r2),r3
 100428c:	8c 62 ff db 	l.lbz r3,0xffffffdb(r2)
 1004290:	db e2 1f fe 	l.sb 0xfffffffe(r2),r3
 1004294:	8c 62 ff fe 	l.lbz r3,0xfffffffe(r2)
 1004298:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
 100429c:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 10042a0:	a4 63 00 01 	l.andi r3,r3,0x1
 10042a4:	d7 e2 1f ec 	l.sw 0xffffffec(r2),r3
 10042a8:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 10042ac:	bc 03 00 00 	l.sfeqi r3,0x0
 10042b0:	13 ff ff ef 	l.bf 100426c <_uart_getc+0xc>
 10042b4:	15 00 00 00 	l.nop 0x0
    unsigned char rec_blocka[512];
	    unsigned char rec_blockb[512];
 10042b8:	18 60 90 00 	l.movhi r3,0x9000
 10042bc:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 10042c0:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 10042c4:	8c 63 00 00 	l.lbz r3,0x0(r3)
 10042c8:	db e2 1f da 	l.sb 0xffffffda(r2),r3
 10042cc:	8c 62 ff da 	l.lbz r3,0xffffffda(r2)
 10042d0:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3
 10042d4:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 10042d8:	db e2 1f d9 	l.sb 0xffffffd9(r2),r3
 10042dc:	8c 62 ff d9 	l.lbz r3,0xffffffd9(r2)
 10042e0:	db e2 1f ff 	l.sb 0xffffffff(r2),r3
  
   #ifdef RX
 10042e4:	90 62 ff ff 	l.lbs r3,0xffffffff(r2)
 10042e8:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
 10042ec:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 10042f0:	d7 e2 1f e0 	l.sw 0xffffffe0(r2),r3
 for  (i =0; i<512;i++)
 10042f4:	85 62 ff e0 	l.lwz r11,0xffffffe0(r2)
 10042f8:	84 41 00 00 	l.lwz r2,0x0(r1)
 10042fc:	44 00 48 00 	l.jr r9
 1004300:	9c 21 00 2c 	l.addi r1,r1,0x2c

01004304 <_sd_get_rca>:
	  }
	return 1;
 }
*/
int sd_get_rca(sd_card *d)
{
 1004304:	9c 21 ff a0 	l.addi r1,r1,0xffffffa0
 1004308:	d4 01 10 04 	l.sw 0x4(r1),r2
 100430c:	9c 41 00 60 	l.addi r2,r1,0x60
 1004310:	d4 01 48 00 	l.sw 0x0(r1),r9
 1004314:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
      uint32 rtn_reg=0;
 1004318:	9c 60 00 00 	l.addi r3,r0,0x0
 100431c:	d7 e2 1f fc 	l.sw 0xfffffffc(r2),r3
      SD_REG(SD_COMMAND) = CMD3 | CICE | CRCE | RSP_48;  
 1004320:	18 80 a0 00 	l.movhi r4,0xa000
 1004324:	d7 e2 27 cc 	l.sw 0xffffffcc(r2),r4
 1004328:	84 62 ff cc 	l.lwz r3,0xffffffcc(r2)
 100432c:	a8 63 00 04 	l.ori r3,r3,0x4
 1004330:	d7 e2 1f d4 	l.sw 0xffffffd4(r2),r3
 1004334:	9c 80 03 1a 	l.addi r4,r0,0x31a
 1004338:	d7 e2 27 c8 	l.sw 0xffffffc8(r2),r4
 100433c:	84 82 ff c8 	l.lwz r4,0xffffffc8(r2)
 1004340:	84 62 ff d4 	l.lwz r3,0xffffffd4(r2)
 1004344:	d4 03 20 00 	l.sw 0x0(r3),r4
	  SD_REG(SD_ARG)=0;
 1004348:	18 60 a0 00 	l.movhi r3,0xa000
 100434c:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 1004350:	9c 60 00 00 	l.addi r3,r0,0x0
 1004354:	84 82 ff d8 	l.lwz r4,0xffffffd8(r2)
 1004358:	d4 04 18 00 	l.sw 0x0(r4),r3

      if (sd_wait_rsp() == 0)         
 100435c:	04 00 00 49 	l.jal 1004480 <_sd_wait_rsp>
 1004360:	15 00 00 00 	l.nop 0x0
 1004364:	d7 e2 5f c4 	l.sw 0xffffffc4(r2),r11
 1004368:	84 82 ff c4 	l.lwz r4,0xffffffc4(r2)
 100436c:	d7 e2 27 dc 	l.sw 0xffffffdc(r2),r4
 1004370:	84 62 ff dc 	l.lwz r3,0xffffffdc(r2)
 1004374:	bc 23 00 00 	l.sfnei r3,0x0
 1004378:	10 00 00 06 	l.bf 1004390 <_sd_get_rca+0x8c>
 100437c:	15 00 00 00 	l.nop 0x0
	   return 0;
 1004380:	9c 80 00 00 	l.addi r4,r0,0x0
 1004384:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 1004388:	00 00 00 37 	l.j 1004464 <_sd_get_rca+0x160>
 100438c:	15 00 00 00 	l.nop 0x0
      else{ 
		  rtn_reg = SD_REG(SD_NORMAL_INT_STATUS);
 1004390:	18 60 a0 00 	l.movhi r3,0xa000
 1004394:	d7 e2 1f c0 	l.sw 0xffffffc0(r2),r3
 1004398:	84 82 ff c0 	l.lwz r4,0xffffffc0(r2)
 100439c:	a8 84 00 30 	l.ori r4,r4,0x30
 10043a0:	d7 e2 27 e4 	l.sw 0xffffffe4(r2),r4
 10043a4:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 10043a8:	84 63 00 00 	l.lwz r3,0x0(r3)
 10043ac:	d7 e2 1f bc 	l.sw 0xffffffbc(r2),r3
 10043b0:	84 82 ff bc 	l.lwz r4,0xffffffbc(r2)
 10043b4:	d7 e2 27 fc 	l.sw 0xfffffffc(r2),r4
          if ( (rtn_reg  & EI) == EI)    //Error in response, init failed return.
 10043b8:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 10043bc:	d7 e2 1f b8 	l.sw 0xffffffb8(r2),r3
 10043c0:	84 82 ff b8 	l.lwz r4,0xffffffb8(r2)
 10043c4:	a4 84 80 00 	l.andi r4,r4,0x8000
 10043c8:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
 10043cc:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 10043d0:	bc 03 00 00 	l.sfeqi r3,0x0
 10043d4:	10 00 00 06 	l.bf 10043ec <_sd_get_rca+0xe8>
 10043d8:	15 00 00 00 	l.nop 0x0
		   return 0;
 10043dc:	9c 80 00 00 	l.addi r4,r0,0x0
 10043e0:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 10043e4:	00 00 00 20 	l.j 1004464 <_sd_get_rca+0x160>
 10043e8:	15 00 00 00 	l.nop 0x0
		rtn_reg = SD_REG(SD_RESP1);
 10043ec:	18 60 a0 00 	l.movhi r3,0xa000
 10043f0:	d7 e2 1f b4 	l.sw 0xffffffb4(r2),r3
 10043f4:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 10043f8:	a8 84 00 0c 	l.ori r4,r4,0xc
 10043fc:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
 1004400:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1004404:	84 63 00 00 	l.lwz r3,0x0(r3)
 1004408:	d7 e2 1f b0 	l.sw 0xffffffb0(r2),r3
 100440c:	84 82 ff b0 	l.lwz r4,0xffffffb0(r2)
 1004410:	d7 e2 27 fc 	l.sw 0xfffffffc(r2),r4
		d->rca=((rtn_reg&RCA_RCA_MASK)>>16);
 1004414:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1004418:	d7 e2 1f ac 	l.sw 0xffffffac(r2),r3
 100441c:	18 60 ff ff 	l.movhi r3,0xffff
 1004420:	84 82 ff ac 	l.lwz r4,0xffffffac(r2)
 1004424:	e0 64 18 03 	l.and r3,r4,r3
 1004428:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 100442c:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 1004430:	b8 84 00 50 	l.srli r4,r4,0x10
 1004434:	d7 e2 27 f4 	l.sw 0xfffffff4(r2),r4
 1004438:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 100443c:	d7 e2 1f a8 	l.sw 0xffffffa8(r2),r3
 1004440:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1004444:	84 82 ff a8 	l.lwz r4,0xffffffa8(r2)
 1004448:	d4 04 18 00 	l.sw 0x0(r4),r3
	   uart_print_str("rca fine");
 100444c:	18 60 01 00 	l.movhi r3,0x100
 1004450:	a8 63 4f 29 	l.ori r3,r3,0x4f29
 1004454:	07 ff fe 72 	l.jal 1003e1c <_uart_print_str>
 1004458:	15 00 00 00 	l.nop 0x0
		
	  }
	  return 1;
 100445c:	9c 80 00 01 	l.addi r4,r0,0x1
 1004460:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 1004464:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 1004468:	d7 e2 1f d0 	l.sw 0xffffffd0(r2),r3

}
 100446c:	85 62 ff d0 	l.lwz r11,0xffffffd0(r2)
 1004470:	85 21 00 00 	l.lwz r9,0x0(r1)
 1004474:	84 41 00 04 	l.lwz r2,0x4(r1)
 1004478:	44 00 48 00 	l.jr r9
 100447c:	9c 21 00 60 	l.addi r1,r1,0x60

01004480 <_sd_wait_rsp>:


//return 0 if no response else return 1.
uint8 sd_wait_rsp()
{  
 1004480:	9c 21 ff b4 	l.addi r1,r1,0xffffffb4
 1004484:	d4 01 10 00 	l.sw 0x0(r1),r2
 1004488:	9c 41 00 4c 	l.addi r2,r1,0x4c
  volatile unsigned long r1, r2;
 
 //Polling for timeout and command complete
 while (1 ) 
 {
  r1= SD_REG(SD_ERROR_INT_STATUS);
 100448c:	18 60 a0 00 	l.movhi r3,0xa000
 1004490:	d7 e2 1f bc 	l.sw 0xffffffbc(r2),r3
 1004494:	84 62 ff bc 	l.lwz r3,0xffffffbc(r2)
 1004498:	a8 63 00 34 	l.ori r3,r3,0x34
 100449c:	d7 e2 1f c4 	l.sw 0xffffffc4(r2),r3
 10044a0:	84 62 ff c4 	l.lwz r3,0xffffffc4(r2)
 10044a4:	84 63 00 00 	l.lwz r3,0x0(r3)
 10044a8:	d7 e2 1f c8 	l.sw 0xffffffc8(r2),r3
 10044ac:	84 62 ff c8 	l.lwz r3,0xffffffc8(r2)
 10044b0:	d7 e2 1f fc 	l.sw 0xfffffffc(r2),r3
  r2= SD_REG(SD_NORMAL_INT_STATUS) ;
 10044b4:	18 60 a0 00 	l.movhi r3,0xa000
 10044b8:	d7 e2 1f b8 	l.sw 0xffffffb8(r2),r3
 10044bc:	84 62 ff b8 	l.lwz r3,0xffffffb8(r2)
 10044c0:	a8 63 00 30 	l.ori r3,r3,0x30
 10044c4:	d7 e2 1f cc 	l.sw 0xffffffcc(r2),r3
 10044c8:	84 62 ff cc 	l.lwz r3,0xffffffcc(r2)
 10044cc:	84 63 00 00 	l.lwz r3,0x0(r3)
 10044d0:	d7 e2 1f d0 	l.sw 0xffffffd0(r2),r3
 10044d4:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 10044d8:	d7 e2 1f f8 	l.sw 0xfffffff8(r2),r3
  
   if (( r1 & CMD_TIMEOUT ) == CMD_TIMEOUT) 
 10044dc:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 10044e0:	d7 e2 1f d4 	l.sw 0xffffffd4(r2),r3
 10044e4:	84 62 ff d4 	l.lwz r3,0xffffffd4(r2)
 10044e8:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 10044ec:	84 62 ff d8 	l.lwz r3,0xffffffd8(r2)
 10044f0:	a4 63 00 01 	l.andi r3,r3,0x1
 10044f4:	d7 e2 1f dc 	l.sw 0xffffffdc(r2),r3
 10044f8:	84 62 ff dc 	l.lwz r3,0xffffffdc(r2)
 10044fc:	a4 63 00 ff 	l.andi r3,r3,0xff
 1004500:	d7 e2 1f e0 	l.sw 0xffffffe0(r2),r3
 1004504:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 1004508:	bc 03 00 00 	l.sfeqi r3,0x0
 100450c:	10 00 00 06 	l.bf 1004524 <_sd_wait_rsp+0xa4>
 1004510:	15 00 00 00 	l.nop 0x0
	  return 0;
 1004514:	9c 60 00 00 	l.addi r3,r0,0x0
 1004518:	d7 e2 1f e4 	l.sw 0xffffffe4(r2),r3
 100451c:	00 00 00 12 	l.j 1004564 <_sd_wait_rsp+0xe4>
 1004520:	15 00 00 00 	l.nop 0x0
   else if ((r2  & CMD_COMPLETE ) == CMD_COMPLETE) 
 1004524:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1004528:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
 100452c:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1004530:	d7 e2 1f ec 	l.sw 0xffffffec(r2),r3
 1004534:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1004538:	a4 63 00 01 	l.andi r3,r3,0x1
 100453c:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
 1004540:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004544:	a4 63 00 ff 	l.andi r3,r3,0xff
 1004548:	d7 e2 1f f4 	l.sw 0xfffffff4(r2),r3
 100454c:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1004550:	bc 03 00 00 	l.sfeqi r3,0x0
 1004554:	13 ff ff ce 	l.bf 100448c <_sd_wait_rsp+0xc>
 1004558:	15 00 00 00 	l.nop 0x0
	  return 1;
 100455c:	9c 60 00 01 	l.addi r3,r0,0x1
 1004560:	d7 e2 1f e4 	l.sw 0xffffffe4(r2),r3
   
 }
 1004564:	84 62 ff e4 	l.lwz r3,0xffffffe4(r2)
 1004568:	d7 e2 1f c0 	l.sw 0xffffffc0(r2),r3
  //Later Exception restart module
  return 0;
 
}
 100456c:	85 62 ff c0 	l.lwz r11,0xffffffc0(r2)
 1004570:	84 41 00 00 	l.lwz r2,0x0(r1)
 1004574:	44 00 48 00 	l.jr r9
 1004578:	9c 21 00 4c 	l.addi r1,r1,0x4c

0100457c <_sd_ocr_set>:

unsigned long sd_ocr_set (unsigned long cmd1, unsigned long arg1, unsigned long cmd2, unsigned long  arg2)
{ 
 100457c:	9c 21 ff 78 	l.addi r1,r1,0xffffff78
 1004580:	d4 01 10 04 	l.sw 0x4(r1),r2
 1004584:	9c 41 00 88 	l.addi r2,r1,0x88
 1004588:	d4 01 48 00 	l.sw 0x0(r1),r9
 100458c:	d7 e2 1f fc 	l.sw 0xfffffffc(r2),r3
 1004590:	d7 e2 27 f8 	l.sw 0xfffffff8(r2),r4
 1004594:	d7 e2 2f f4 	l.sw 0xfffffff4(r2),r5
 1004598:	d7 e2 37 f0 	l.sw 0xfffffff0(r2),r6
  static unsigned long rtn_r =0;

  while ((rtn_r & BUSY) != BUSY)
 100459c:	00 00 00 5c 	l.j 100470c <_sd_ocr_set+0x190>
 10045a0:	15 00 00 00 	l.nop 0x0
  {   
    SD_REG(SD_NORMAL_INT_STATUS)=0;
 10045a4:	18 60 a0 00 	l.movhi r3,0xa000
 10045a8:	d7 e2 1f b4 	l.sw 0xffffffb4(r2),r3
 10045ac:	84 82 ff b4 	l.lwz r4,0xffffffb4(r2)
 10045b0:	a8 84 00 30 	l.ori r4,r4,0x30
 10045b4:	d7 e2 27 bc 	l.sw 0xffffffbc(r2),r4
 10045b8:	9c 80 00 00 	l.addi r4,r0,0x0
 10045bc:	84 62 ff bc 	l.lwz r3,0xffffffbc(r2)
 10045c0:	d4 03 20 00 	l.sw 0x0(r3),r4
    SD_REG(SD_ERROR_INT_STATUS)=0;
 10045c4:	18 60 a0 00 	l.movhi r3,0xa000
 10045c8:	d7 e2 1f b0 	l.sw 0xffffffb0(r2),r3
 10045cc:	84 82 ff b0 	l.lwz r4,0xffffffb0(r2)
 10045d0:	a8 84 00 34 	l.ori r4,r4,0x34
 10045d4:	d7 e2 27 c0 	l.sw 0xffffffc0(r2),r4
 10045d8:	9c 80 00 00 	l.addi r4,r0,0x0
 10045dc:	84 62 ff c0 	l.lwz r3,0xffffffc0(r2)
 10045e0:	d4 03 20 00 	l.sw 0x0(r3),r4

	SD_REG(SD_COMMAND) = cmd1;
 10045e4:	18 60 a0 00 	l.movhi r3,0xa000
 10045e8:	d7 e2 1f ac 	l.sw 0xffffffac(r2),r3
 10045ec:	84 82 ff ac 	l.lwz r4,0xffffffac(r2)
 10045f0:	a8 84 00 04 	l.ori r4,r4,0x4
 10045f4:	d7 e2 27 c4 	l.sw 0xffffffc4(r2),r4
 10045f8:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 10045fc:	d7 e2 1f a8 	l.sw 0xffffffa8(r2),r3
 1004600:	84 62 ff a8 	l.lwz r3,0xffffffa8(r2)
 1004604:	84 82 ff c4 	l.lwz r4,0xffffffc4(r2)
 1004608:	d4 04 18 00 	l.sw 0x0(r4),r3
	SD_REG(SD_ARG) = arg1;
 100460c:	18 80 a0 00 	l.movhi r4,0xa000
 1004610:	d7 e2 27 c8 	l.sw 0xffffffc8(r2),r4
 1004614:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1004618:	d7 e2 1f a4 	l.sw 0xffffffa4(r2),r3
 100461c:	84 62 ff a4 	l.lwz r3,0xffffffa4(r2)
 1004620:	84 82 ff c8 	l.lwz r4,0xffffffc8(r2)
 1004624:	d4 04 18 00 	l.sw 0x0(r4),r3
   if (sd_wait_rsp() == 0)         
 1004628:	07 ff ff 96 	l.jal 1004480 <_sd_wait_rsp>
 100462c:	15 00 00 00 	l.nop 0x0
 1004630:	d7 e2 5f a0 	l.sw 0xffffffa0(r2),r11
 1004634:	84 82 ff a0 	l.lwz r4,0xffffffa0(r2)
 1004638:	d7 e2 27 cc 	l.sw 0xffffffcc(r2),r4
 100463c:	84 62 ff cc 	l.lwz r3,0xffffffcc(r2)
 1004640:	bc 23 00 00 	l.sfnei r3,0x0
 1004644:	10 00 00 06 	l.bf 100465c <_sd_ocr_set+0xe0>
 1004648:	15 00 00 00 	l.nop 0x0
	   return 0;
 100464c:	9c 80 00 00 	l.addi r4,r0,0x0
 1004650:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 1004654:	00 00 00 40 	l.j 1004754 <_sd_ocr_set+0x1d8>
 1004658:	15 00 00 00 	l.nop 0x0
   else{
       SD_REG (SD_COMMAND) =cmd2;
 100465c:	18 60 a0 00 	l.movhi r3,0xa000
 1004660:	d7 e2 1f 9c 	l.sw 0xffffff9c(r2),r3
 1004664:	84 82 ff 9c 	l.lwz r4,0xffffff9c(r2)
 1004668:	a8 84 00 04 	l.ori r4,r4,0x4
 100466c:	d7 e2 27 d4 	l.sw 0xffffffd4(r2),r4
 1004670:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1004674:	d7 e2 1f 98 	l.sw 0xffffff98(r2),r3
 1004678:	84 62 ff 98 	l.lwz r3,0xffffff98(r2)
 100467c:	84 82 ff d4 	l.lwz r4,0xffffffd4(r2)
 1004680:	d4 04 18 00 	l.sw 0x0(r4),r3
       SD_REG (SD_ARG)   =arg2;
 1004684:	18 80 a0 00 	l.movhi r4,0xa000
 1004688:	d7 e2 27 d8 	l.sw 0xffffffd8(r2),r4
 100468c:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004690:	d7 e2 1f 94 	l.sw 0xffffff94(r2),r3
 1004694:	84 62 ff 94 	l.lwz r3,0xffffff94(r2)
 1004698:	84 82 ff d8 	l.lwz r4,0xffffffd8(r2)
 100469c:	d4 04 18 00 	l.sw 0x0(r4),r3
   }
   if (sd_wait_rsp() == 0)         
 10046a0:	07 ff ff 78 	l.jal 1004480 <_sd_wait_rsp>
 10046a4:	15 00 00 00 	l.nop 0x0
 10046a8:	d7 e2 5f 90 	l.sw 0xffffff90(r2),r11
 10046ac:	84 82 ff 90 	l.lwz r4,0xffffff90(r2)
 10046b0:	d7 e2 27 dc 	l.sw 0xffffffdc(r2),r4
 10046b4:	84 62 ff dc 	l.lwz r3,0xffffffdc(r2)
 10046b8:	bc 23 00 00 	l.sfnei r3,0x0
 10046bc:	10 00 00 06 	l.bf 10046d4 <_sd_ocr_set+0x158>
 10046c0:	15 00 00 00 	l.nop 0x0
	   return 0;
 10046c4:	9c 80 00 00 	l.addi r4,r0,0x0
 10046c8:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 10046cc:	00 00 00 22 	l.j 1004754 <_sd_ocr_set+0x1d8>
 10046d0:	15 00 00 00 	l.nop 0x0
    else
     rtn_r= SD_REG(SD_RESP1);
 10046d4:	18 60 a0 00 	l.movhi r3,0xa000
 10046d8:	d7 e2 1f 8c 	l.sw 0xffffff8c(r2),r3
 10046dc:	84 82 ff 8c 	l.lwz r4,0xffffff8c(r2)
 10046e0:	a8 84 00 0c 	l.ori r4,r4,0xc
 10046e4:	d7 e2 27 e0 	l.sw 0xffffffe0(r2),r4
 10046e8:	84 62 ff e0 	l.lwz r3,0xffffffe0(r2)
 10046ec:	84 63 00 00 	l.lwz r3,0x0(r3)
 10046f0:	d7 e2 1f e4 	l.sw 0xffffffe4(r2),r3
 10046f4:	18 80 01 00 	l.movhi r4,0x100
 10046f8:	a8 84 4f 40 	l.ori r4,r4,0x4f40
 10046fc:	d7 e2 27 88 	l.sw 0xffffff88(r2),r4
 1004700:	84 82 ff e4 	l.lwz r4,0xffffffe4(r2)
 1004704:	84 62 ff 88 	l.lwz r3,0xffffff88(r2)
 1004708:	d4 03 20 00 	l.sw 0x0(r3),r4

unsigned long sd_ocr_set (unsigned long cmd1, unsigned long arg1, unsigned long cmd2, unsigned long  arg2)
{ 
  static unsigned long rtn_r =0;

  while ((rtn_r & BUSY) != BUSY)
 100470c:	18 60 01 00 	l.movhi r3,0x100
 1004710:	a8 63 4f 40 	l.ori r3,r3,0x4f40
 1004714:	d7 e2 1f 84 	l.sw 0xffffff84(r2),r3
 1004718:	84 82 ff 84 	l.lwz r4,0xffffff84(r2)
 100471c:	84 84 00 00 	l.lwz r4,0x0(r4)
 1004720:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
 1004724:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1004728:	d7 e2 1f ec 	l.sw 0xffffffec(r2),r3
 100472c:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 1004730:	bd 64 00 00 	l.sfgesi r4,0x0
 1004734:	13 ff ff 9c 	l.bf 10045a4 <_sd_ocr_set+0x28>
 1004738:	15 00 00 00 	l.nop 0x0
     rtn_r= SD_REG(SD_RESP1);
     
      
 }

  return rtn_r;
 100473c:	18 60 01 00 	l.movhi r3,0x100
 1004740:	a8 63 4f 40 	l.ori r3,r3,0x4f40
 1004744:	d7 e2 1f 80 	l.sw 0xffffff80(r2),r3
 1004748:	84 82 ff 80 	l.lwz r4,0xffffff80(r2)
 100474c:	84 84 00 00 	l.lwz r4,0x0(r4)
 1004750:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 1004754:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 1004758:	d7 e2 1f b8 	l.sw 0xffffffb8(r2),r3
}
 100475c:	85 62 ff b8 	l.lwz r11,0xffffffb8(r2)
 1004760:	85 21 00 00 	l.lwz r9,0x0(r1)
 1004764:	84 41 00 04 	l.lwz r2,0x4(r1)
 1004768:	44 00 48 00 	l.jr r9
 100476c:	9c 21 00 88 	l.addi r1,r1,0x88

01004770 <_sd_controller_init>:
 // unsigned int a= SD_REG(SD_STATUS);
  //return (a & 1);
//

 sd_card sd_controller_init ()
{
 1004770:	9c 21 fe 68 	l.addi r1,r1,0xfffffe68
 1004774:	d4 01 10 04 	l.sw 0x4(r1),r2
 1004778:	9c 41 01 98 	l.addi r2,r1,0x198
 100477c:	d4 01 48 00 	l.sw 0x0(r1),r9
 1004780:	d7 e2 1f 48 	l.sw 0xffffff48(r2),r3
  sd_card dev;

   volatile unsigned long rtn_reg=0;
 1004784:	9c 60 00 00 	l.addi r3,r0,0x0
 1004788:	d7 e2 1f e8 	l.sw 0xffffffe8(r2),r3
   volatile  unsigned long rtn_reg1=0;
 100478c:	9c 80 00 00 	l.addi r4,r0,0x0
 1004790:	d7 e2 27 e4 	l.sw 0xffffffe4(r2),r4
   
    REG32(SD_CONTROLLER_BASE+SD_TIMEOUT)=0x000077F;
 1004794:	18 60 a0 00 	l.movhi r3,0xa000
 1004798:	d7 e2 1f 44 	l.sw 0xffffff44(r2),r3
 100479c:	84 82 ff 44 	l.lwz r4,0xffffff44(r2)
 10047a0:	a8 84 00 2c 	l.ori r4,r4,0x2c
 10047a4:	d7 e2 27 4c 	l.sw 0xffffff4c(r2),r4
 10047a8:	9c 60 07 7f 	l.addi r3,r0,0x77f
 10047ac:	d7 e2 1f 40 	l.sw 0xffffff40(r2),r3
 10047b0:	84 62 ff 40 	l.lwz r3,0xffffff40(r2)
 10047b4:	84 82 ff 4c 	l.lwz r4,0xffffff4c(r2)
 10047b8:	d4 04 18 00 	l.sw 0x0(r4),r3


	REG32(SD_CONTROLLER_BASE+SD_ARG)   =0x0000;
 10047bc:	18 80 a0 00 	l.movhi r4,0xa000
 10047c0:	d7 e2 27 50 	l.sw 0xffffff50(r2),r4
 10047c4:	9c 80 00 00 	l.addi r4,r0,0x0
 10047c8:	84 62 ff 50 	l.lwz r3,0xffffff50(r2)
 10047cc:	d4 03 20 00 	l.sw 0x0(r3),r4
	REG32(SD_CONTROLLER_BASE+SD_COMMAND) =0x0000;
 10047d0:	18 60 a0 00 	l.movhi r3,0xa000
 10047d4:	d7 e2 1f 3c 	l.sw 0xffffff3c(r2),r3
 10047d8:	84 82 ff 3c 	l.lwz r4,0xffffff3c(r2)
 10047dc:	a8 84 00 04 	l.ori r4,r4,0x4
 10047e0:	d7 e2 27 54 	l.sw 0xffffff54(r2),r4
 10047e4:	9c 80 00 00 	l.addi r4,r0,0x0
 10047e8:	84 62 ff 54 	l.lwz r3,0xffffff54(r2)
 10047ec:	d4 03 20 00 	l.sw 0x0(r3),r4
    
	SD_REG(SD_COMMAND) = ( CMD8 | CICE | CRCE | RSP_48);
 10047f0:	18 60 a0 00 	l.movhi r3,0xa000
 10047f4:	d7 e2 1f 38 	l.sw 0xffffff38(r2),r3
 10047f8:	84 82 ff 38 	l.lwz r4,0xffffff38(r2)
 10047fc:	a8 84 00 04 	l.ori r4,r4,0x4
 1004800:	d7 e2 27 58 	l.sw 0xffffff58(r2),r4
 1004804:	9c 60 08 1a 	l.addi r3,r0,0x81a
 1004808:	d7 e2 1f 34 	l.sw 0xffffff34(r2),r3
 100480c:	84 62 ff 34 	l.lwz r3,0xffffff34(r2)
 1004810:	84 82 ff 58 	l.lwz r4,0xffffff58(r2)
 1004814:	d4 04 18 00 	l.sw 0x0(r4),r3
    SD_REG(SD_ARG) = VHS|CHECK_PATTERN;
 1004818:	18 80 a0 00 	l.movhi r4,0xa000
 100481c:	d7 e2 27 5c 	l.sw 0xffffff5c(r2),r4
 1004820:	9c 60 01 aa 	l.addi r3,r0,0x1aa
 1004824:	d7 e2 1f 30 	l.sw 0xffffff30(r2),r3
 1004828:	84 62 ff 30 	l.lwz r3,0xffffff30(r2)
 100482c:	84 82 ff 5c 	l.lwz r4,0xffffff5c(r2)
 1004830:	d4 04 18 00 	l.sw 0x0(r4),r3
    
	dev.phys_spec_2_0 = sd_wait_rsp();
 1004834:	07 ff ff 13 	l.jal 1004480 <_sd_wait_rsp>
 1004838:	15 00 00 00 	l.nop 0x0
 100483c:	d7 e2 5f 2c 	l.sw 0xffffff2c(r2),r11
 1004840:	84 82 ff 2c 	l.lwz r4,0xffffff2c(r2)
 1004844:	d7 e2 27 60 	l.sw 0xffffff60(r2),r4
 1004848:	84 62 ff 60 	l.lwz r3,0xffffff60(r2)
 100484c:	db e2 1f 2b 	l.sb 0xffffff2b(r2),r3
 1004850:	8c 82 ff 2b 	l.lbz r4,0xffffff2b(r2)
 1004854:	db e2 27 f6 	l.sb 0xfffffff6(r2),r4
	REG32(SD_CONTROLLER_BASE+SD_ARG)   =0x0000;
 1004858:	18 60 a0 00 	l.movhi r3,0xa000
 100485c:	d7 e2 1f 64 	l.sw 0xffffff64(r2),r3
 1004860:	9c 60 00 00 	l.addi r3,r0,0x0
 1004864:	84 82 ff 64 	l.lwz r4,0xffffff64(r2)
 1004868:	d4 04 18 00 	l.sw 0x0(r4),r3
		REG32(SD_CONTROLLER_BASE+SD_COMMAND) =0x0000;
 100486c:	18 80 a0 00 	l.movhi r4,0xa000
 1004870:	d7 e2 27 24 	l.sw 0xffffff24(r2),r4
 1004874:	84 62 ff 24 	l.lwz r3,0xffffff24(r2)
 1004878:	a8 63 00 04 	l.ori r3,r3,0x4
 100487c:	d7 e2 1f 68 	l.sw 0xffffff68(r2),r3
 1004880:	9c 60 00 00 	l.addi r3,r0,0x0
 1004884:	84 82 ff 68 	l.lwz r4,0xffffff68(r2)
 1004888:	d4 04 18 00 	l.sw 0x0(r4),r3
     if (dev.phys_spec_2_0)   
 100488c:	8c 82 ff f6 	l.lbz r4,0xfffffff6(r2)
 1004890:	d7 e2 27 6c 	l.sw 0xffffff6c(r2),r4
 1004894:	84 62 ff 6c 	l.lwz r3,0xffffff6c(r2)
 1004898:	bc 03 00 00 	l.sfeqi r3,0x0
 100489c:	10 00 00 08 	l.bf 10048bc <_sd_controller_init+0x14c>
 10048a0:	15 00 00 00 	l.nop 0x0
	  { 
		 uart_print_str("2_0 CARD /n");
 10048a4:	18 60 01 00 	l.movhi r3,0x100
 10048a8:	a8 63 4f 32 	l.ori r3,r3,0x4f32
 10048ac:	07 ff fd 5c 	l.jal 1003e1c <_uart_print_str>
 10048b0:	15 00 00 00 	l.nop 0x0
 10048b4:	00 00 00 ae 	l.j 1004b6c <_sd_controller_init+0x3fc>
 10048b8:	15 00 00 00 	l.nop 0x0

	  }
	  else
	  {
		
		REG32(SD_CONTROLLER_BASE+SD_ARG)   =0x0000;
 10048bc:	18 80 a0 00 	l.movhi r4,0xa000
 10048c0:	d7 e2 27 70 	l.sw 0xffffff70(r2),r4
 10048c4:	9c 80 00 00 	l.addi r4,r0,0x0
 10048c8:	84 62 ff 70 	l.lwz r3,0xffffff70(r2)
 10048cc:	d4 03 20 00 	l.sw 0x0(r3),r4
		REG32(SD_CONTROLLER_BASE+SD_COMMAND) =0x0000;
 10048d0:	18 60 a0 00 	l.movhi r3,0xa000
 10048d4:	d7 e2 1f 20 	l.sw 0xffffff20(r2),r3
 10048d8:	84 82 ff 20 	l.lwz r4,0xffffff20(r2)
 10048dc:	a8 84 00 04 	l.ori r4,r4,0x4
 10048e0:	d7 e2 27 74 	l.sw 0xffffff74(r2),r4
 10048e4:	9c 80 00 00 	l.addi r4,r0,0x0
 10048e8:	84 62 ff 74 	l.lwz r3,0xffffff74(r2)
 10048ec:	d4 03 20 00 	l.sw 0x0(r3),r4
		while (REG32(SD_CONTROLLER_BASE+SD_STATUS)& 1) {}
 10048f0:	18 60 a0 00 	l.movhi r3,0xa000
 10048f4:	d7 e2 1f 1c 	l.sw 0xffffff1c(r2),r3
 10048f8:	84 82 ff 1c 	l.lwz r4,0xffffff1c(r2)
 10048fc:	a8 84 00 08 	l.ori r4,r4,0x8
 1004900:	d7 e2 27 78 	l.sw 0xffffff78(r2),r4
 1004904:	84 62 ff 78 	l.lwz r3,0xffffff78(r2)
 1004908:	84 63 00 00 	l.lwz r3,0x0(r3)
 100490c:	d7 e2 1f 7c 	l.sw 0xffffff7c(r2),r3
 1004910:	84 82 ff 7c 	l.lwz r4,0xffffff7c(r2)
 1004914:	d7 e2 27 80 	l.sw 0xffffff80(r2),r4
 1004918:	84 62 ff 80 	l.lwz r3,0xffffff80(r2)
 100491c:	a4 63 00 01 	l.andi r3,r3,0x1
 1004920:	d7 e2 1f 84 	l.sw 0xffffff84(r2),r3
 1004924:	84 82 ff 84 	l.lwz r4,0xffffff84(r2)
 1004928:	a4 84 00 ff 	l.andi r4,r4,0xff
 100492c:	d7 e2 27 88 	l.sw 0xffffff88(r2),r4
 1004930:	84 62 ff 88 	l.lwz r3,0xffffff88(r2)
 1004934:	bc 23 00 00 	l.sfnei r3,0x0
 1004938:	13 ff ff ee 	l.bf 10048f0 <_sd_controller_init+0x180>
 100493c:	15 00 00 00 	l.nop 0x0
			

		rtn_reg=0;
 1004940:	9c 80 00 00 	l.addi r4,r0,0x0
 1004944:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
        while ((rtn_reg & BUSY) != BUSY)
 1004948:	00 00 00 72 	l.j 1004b10 <_sd_controller_init+0x3a0>
 100494c:	15 00 00 00 	l.nop 0x0
	    {
          REG32(SD_CONTROLLER_BASE+SD_COMMAND) = CMD55|RSP_48; 
 1004950:	18 60 a0 00 	l.movhi r3,0xa000
 1004954:	d7 e2 1f 18 	l.sw 0xffffff18(r2),r3
 1004958:	84 82 ff 18 	l.lwz r4,0xffffff18(r2)
 100495c:	a8 84 00 04 	l.ori r4,r4,0x4
 1004960:	d7 e2 27 8c 	l.sw 0xffffff8c(r2),r4
 1004964:	9c 60 37 02 	l.addi r3,r0,0x3702
 1004968:	d7 e2 1f 14 	l.sw 0xffffff14(r2),r3
 100496c:	84 62 ff 14 	l.lwz r3,0xffffff14(r2)
 1004970:	84 82 ff 8c 	l.lwz r4,0xffffff8c(r2)
 1004974:	d4 04 18 00 	l.sw 0x0(r4),r3
	      REG32(SD_CONTROLLER_BASE+SD_ARG) =0;
 1004978:	18 80 a0 00 	l.movhi r4,0xa000
 100497c:	d7 e2 27 90 	l.sw 0xffffff90(r2),r4
 1004980:	9c 80 00 00 	l.addi r4,r0,0x0
 1004984:	84 62 ff 90 	l.lwz r3,0xffffff90(r2)
 1004988:	d4 03 20 00 	l.sw 0x0(r3),r4
      	  if (!sd_wait_rsp())
 100498c:	07 ff fe bd 	l.jal 1004480 <_sd_wait_rsp>
 1004990:	15 00 00 00 	l.nop 0x0
 1004994:	d7 e2 5f 10 	l.sw 0xffffff10(r2),r11
 1004998:	84 62 ff 10 	l.lwz r3,0xffffff10(r2)
 100499c:	d7 e2 1f 94 	l.sw 0xffffff94(r2),r3
 10049a0:	84 82 ff 94 	l.lwz r4,0xffffff94(r2)
 10049a4:	bc 24 00 00 	l.sfnei r4,0x0
 10049a8:	10 00 00 1d 	l.bf 1004a1c <_sd_controller_init+0x2ac>
 10049ac:	15 00 00 00 	l.nop 0x0
			 return dev;
 10049b0:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 10049b4:	d7 e2 1f 0c 	l.sw 0xffffff0c(r2),r3
 10049b8:	84 62 ff 0c 	l.lwz r3,0xffffff0c(r2)
 10049bc:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 10049c0:	d4 04 18 00 	l.sw 0x0(r4),r3
 10049c4:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 10049c8:	d7 e2 27 08 	l.sw 0xffffff08(r2),r4
 10049cc:	84 82 ff 08 	l.lwz r4,0xffffff08(r2)
 10049d0:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 10049d4:	d4 03 20 04 	l.sw 0x4(r3),r4
 10049d8:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 10049dc:	d7 e2 1f 04 	l.sw 0xffffff04(r2),r3
 10049e0:	84 62 ff 04 	l.lwz r3,0xffffff04(r2)
 10049e4:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 10049e8:	d4 04 18 08 	l.sw 0x8(r4),r3
 10049ec:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 10049f0:	d7 e2 27 00 	l.sw 0xffffff00(r2),r4
 10049f4:	84 82 ff 00 	l.lwz r4,0xffffff00(r2)
 10049f8:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 10049fc:	d4 03 20 0c 	l.sw 0xc(r3),r4
 1004a00:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1004a04:	d7 e2 1e fc 	l.sw 0xfffffefc(r2),r3
 1004a08:	84 62 fe fc 	l.lwz r3,0xfffffefc(r2)
 1004a0c:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004a10:	d4 04 18 10 	l.sw 0x10(r4),r3
 1004a14:	00 00 00 ed 	l.j 1004dc8 <_sd_controller_init+0x658>
 1004a18:	15 00 00 00 	l.nop 0x0
         REG32(SD_CONTROLLER_BASE+SD_COMMAND) =ACMD41 | RSP_48;
 1004a1c:	18 80 a0 00 	l.movhi r4,0xa000
 1004a20:	d7 e2 26 f8 	l.sw 0xfffffef8(r2),r4
 1004a24:	84 62 fe f8 	l.lwz r3,0xfffffef8(r2)
 1004a28:	a8 63 00 04 	l.ori r3,r3,0x4
 1004a2c:	d7 e2 1f 98 	l.sw 0xffffff98(r2),r3
 1004a30:	9c 80 29 02 	l.addi r4,r0,0x2902
 1004a34:	d7 e2 26 f4 	l.sw 0xfffffef4(r2),r4
 1004a38:	84 82 fe f4 	l.lwz r4,0xfffffef4(r2)
 1004a3c:	84 62 ff 98 	l.lwz r3,0xffffff98(r2)
 1004a40:	d4 03 20 00 	l.sw 0x0(r3),r4
		 REG32(SD_CONTROLLER_BASE+SD_ARG)   =0;
 1004a44:	18 60 a0 00 	l.movhi r3,0xa000
 1004a48:	d7 e2 1f 9c 	l.sw 0xffffff9c(r2),r3
 1004a4c:	9c 60 00 00 	l.addi r3,r0,0x0
 1004a50:	84 82 ff 9c 	l.lwz r4,0xffffff9c(r2)
 1004a54:	d4 04 18 00 	l.sw 0x0(r4),r3
    	 if (!sd_wait_rsp())
 1004a58:	07 ff fe 8a 	l.jal 1004480 <_sd_wait_rsp>
 1004a5c:	15 00 00 00 	l.nop 0x0
 1004a60:	d7 e2 5e f0 	l.sw 0xfffffef0(r2),r11
 1004a64:	84 82 fe f0 	l.lwz r4,0xfffffef0(r2)
 1004a68:	d7 e2 27 a0 	l.sw 0xffffffa0(r2),r4
 1004a6c:	84 62 ff a0 	l.lwz r3,0xffffffa0(r2)
 1004a70:	bc 23 00 00 	l.sfnei r3,0x0
 1004a74:	10 00 00 1d 	l.bf 1004ae8 <_sd_controller_init+0x378>
 1004a78:	15 00 00 00 	l.nop 0x0
			 return dev;
 1004a7c:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 1004a80:	d7 e2 26 ec 	l.sw 0xfffffeec(r2),r4
 1004a84:	84 82 fe ec 	l.lwz r4,0xfffffeec(r2)
 1004a88:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004a8c:	d4 03 20 00 	l.sw 0x0(r3),r4
 1004a90:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004a94:	d7 e2 1e e8 	l.sw 0xfffffee8(r2),r3
 1004a98:	84 62 fe e8 	l.lwz r3,0xfffffee8(r2)
 1004a9c:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004aa0:	d4 04 18 04 	l.sw 0x4(r4),r3
 1004aa4:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 1004aa8:	d7 e2 26 e4 	l.sw 0xfffffee4(r2),r4
 1004aac:	84 82 fe e4 	l.lwz r4,0xfffffee4(r2)
 1004ab0:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004ab4:	d4 03 20 08 	l.sw 0x8(r3),r4
 1004ab8:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1004abc:	d7 e2 1e e0 	l.sw 0xfffffee0(r2),r3
 1004ac0:	84 62 fe e0 	l.lwz r3,0xfffffee0(r2)
 1004ac4:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004ac8:	d4 04 18 0c 	l.sw 0xc(r4),r3
 1004acc:	84 82 ff fc 	l.lwz r4,0xfffffffc(r2)
 1004ad0:	d7 e2 26 dc 	l.sw 0xfffffedc(r2),r4
 1004ad4:	84 82 fe dc 	l.lwz r4,0xfffffedc(r2)
 1004ad8:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004adc:	d4 03 20 10 	l.sw 0x10(r3),r4
 1004ae0:	00 00 00 ba 	l.j 1004dc8 <_sd_controller_init+0x658>
 1004ae4:	15 00 00 00 	l.nop 0x0
		  rtn_reg= REG32(SD_CONTROLLER_BASE+SD_RESP1) ;
 1004ae8:	18 60 a0 00 	l.movhi r3,0xa000
 1004aec:	d7 e2 1e d8 	l.sw 0xfffffed8(r2),r3
 1004af0:	84 82 fe d8 	l.lwz r4,0xfffffed8(r2)
 1004af4:	a8 84 00 0c 	l.ori r4,r4,0xc
 1004af8:	d7 e2 27 a4 	l.sw 0xffffffa4(r2),r4
 1004afc:	84 62 ff a4 	l.lwz r3,0xffffffa4(r2)
 1004b00:	84 63 00 00 	l.lwz r3,0x0(r3)
 1004b04:	d7 e2 1f a8 	l.sw 0xffffffa8(r2),r3
 1004b08:	84 82 ff a8 	l.lwz r4,0xffffffa8(r2)
 1004b0c:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
		REG32(SD_CONTROLLER_BASE+SD_COMMAND) =0x0000;
		while (REG32(SD_CONTROLLER_BASE+SD_STATUS)& 1) {}
			

		rtn_reg=0;
        while ((rtn_reg & BUSY) != BUSY)
 1004b10:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1004b14:	d7 e2 1f ac 	l.sw 0xffffffac(r2),r3
 1004b18:	84 82 ff ac 	l.lwz r4,0xffffffac(r2)
 1004b1c:	d7 e2 27 b0 	l.sw 0xffffffb0(r2),r4
 1004b20:	84 62 ff b0 	l.lwz r3,0xffffffb0(r2)
 1004b24:	bd 63 00 00 	l.sfgesi r3,0x0
 1004b28:	13 ff ff 8a 	l.bf 1004950 <_sd_controller_init+0x1e0>
 1004b2c:	15 00 00 00 	l.nop 0x0
		 REG32(SD_CONTROLLER_BASE+SD_ARG)   =0;
    	 if (!sd_wait_rsp())
			 return dev;
		  rtn_reg= REG32(SD_CONTROLLER_BASE+SD_RESP1) ;
		}
	    dev.Voltage_window=rtn_reg&VOLTAGE_MASK;	
 1004b30:	84 82 ff e8 	l.lwz r4,0xffffffe8(r2)
 1004b34:	d7 e2 27 b4 	l.sw 0xffffffb4(r2),r4
 1004b38:	18 80 00 ff 	l.movhi r4,0xff
 1004b3c:	a8 84 ff ff 	l.ori r4,r4,0xffff
 1004b40:	84 62 ff b4 	l.lwz r3,0xffffffb4(r2)
 1004b44:	e0 83 20 03 	l.and r4,r3,r4
 1004b48:	d7 e2 27 b8 	l.sw 0xffffffb8(r2),r4
 1004b4c:	84 62 ff b8 	l.lwz r3,0xffffffb8(r2)
 1004b50:	d7 e2 1f f0 	l.sw 0xfffffff0(r2),r3
		dev.HCS_s = 0;
 1004b54:	9c 80 00 00 	l.addi r4,r0,0x0
 1004b58:	d7 e2 26 d4 	l.sw 0xfffffed4(r2),r4
 1004b5c:	84 62 fe d4 	l.lwz r3,0xfffffed4(r2)
 1004b60:	db e2 1e d3 	l.sb 0xfffffed3(r2),r3
 1004b64:	8c 82 fe d3 	l.lbz r4,0xfffffed3(r2)
 1004b68:	db e2 27 f4 	l.sb 0xfffffff4(r2),r4

	}   
	  

		//GET CID
        REG32(SD_CONTROLLER_BASE+SD_COMMAND) =CMD2 | RSP_146;
 1004b6c:	18 60 a0 00 	l.movhi r3,0xa000
 1004b70:	d7 e2 1e cc 	l.sw 0xfffffecc(r2),r3
 1004b74:	84 82 fe cc 	l.lwz r4,0xfffffecc(r2)
 1004b78:	a8 84 00 04 	l.ori r4,r4,0x4
 1004b7c:	d7 e2 27 bc 	l.sw 0xffffffbc(r2),r4
 1004b80:	9c 60 02 01 	l.addi r3,r0,0x201
 1004b84:	d7 e2 1e c8 	l.sw 0xfffffec8(r2),r3
 1004b88:	84 62 fe c8 	l.lwz r3,0xfffffec8(r2)
 1004b8c:	84 82 ff bc 	l.lwz r4,0xffffffbc(r2)
 1004b90:	d4 04 18 00 	l.sw 0x0(r4),r3
		REG32(SD_CONTROLLER_BASE+SD_ARG)   =0;
 1004b94:	18 80 a0 00 	l.movhi r4,0xa000
 1004b98:	d7 e2 27 c0 	l.sw 0xffffffc0(r2),r4
 1004b9c:	9c 80 00 00 	l.addi r4,r0,0x0
 1004ba0:	84 62 ff c0 	l.lwz r3,0xffffffc0(r2)
 1004ba4:	d4 03 20 00 	l.sw 0x0(r3),r4
		if (!sd_wait_rsp())
 1004ba8:	07 ff fe 36 	l.jal 1004480 <_sd_wait_rsp>
 1004bac:	15 00 00 00 	l.nop 0x0
 1004bb0:	d7 e2 5e c4 	l.sw 0xfffffec4(r2),r11
 1004bb4:	84 62 fe c4 	l.lwz r3,0xfffffec4(r2)
 1004bb8:	d7 e2 1f c4 	l.sw 0xffffffc4(r2),r3
 1004bbc:	84 82 ff c4 	l.lwz r4,0xffffffc4(r2)
 1004bc0:	bc 24 00 00 	l.sfnei r4,0x0
 1004bc4:	10 00 00 1d 	l.bf 1004c38 <_sd_controller_init+0x4c8>
 1004bc8:	15 00 00 00 	l.nop 0x0
			 return dev;
 1004bcc:	84 62 ff ec 	l.lwz r3,0xffffffec(r2)
 1004bd0:	d7 e2 1e c0 	l.sw 0xfffffec0(r2),r3
 1004bd4:	84 62 fe c0 	l.lwz r3,0xfffffec0(r2)
 1004bd8:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004bdc:	d4 04 18 00 	l.sw 0x0(r4),r3
 1004be0:	84 82 ff f0 	l.lwz r4,0xfffffff0(r2)
 1004be4:	d7 e2 26 bc 	l.sw 0xfffffebc(r2),r4
 1004be8:	84 82 fe bc 	l.lwz r4,0xfffffebc(r2)
 1004bec:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004bf0:	d4 03 20 04 	l.sw 0x4(r3),r4
 1004bf4:	84 62 ff f4 	l.lwz r3,0xfffffff4(r2)
 1004bf8:	d7 e2 1e b8 	l.sw 0xfffffeb8(r2),r3
 1004bfc:	84 62 fe b8 	l.lwz r3,0xfffffeb8(r2)
 1004c00:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004c04:	d4 04 18 08 	l.sw 0x8(r4),r3
 1004c08:	84 82 ff f8 	l.lwz r4,0xfffffff8(r2)
 1004c0c:	d7 e2 26 b4 	l.sw 0xfffffeb4(r2),r4
 1004c10:	84 82 fe b4 	l.lwz r4,0xfffffeb4(r2)
 1004c14:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004c18:	d4 03 20 0c 	l.sw 0xc(r3),r4
 1004c1c:	84 62 ff fc 	l.lwz r3,0xfffffffc(r2)
 1004c20:	d7 e2 1e b0 	l.sw 0xfffffeb0(r2),r3
 1004c24:	84 62 fe b0 	l.lwz r3,0xfffffeb0(r2)
 1004c28:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004c2c:	d4 04 18 10 	l.sw 0x10(r4),r3
 1004c30:	00 00 00 66 	l.j 1004dc8 <_sd_controller_init+0x658>
 1004c34:	15 00 00 00 	l.nop 0x0
        //Get RCA
	    SD_REG(SD_COMMAND) = CMD3 | CICE | CRCE | RSP_48;  
 1004c38:	18 80 a0 00 	l.movhi r4,0xa000
 1004c3c:	d7 e2 26 ac 	l.sw 0xfffffeac(r2),r4
 1004c40:	84 62 fe ac 	l.lwz r3,0xfffffeac(r2)
 1004c44:	a8 63 00 04 	l.ori r3,r3,0x4
 1004c48:	d7 e2 1f c8 	l.sw 0xffffffc8(r2),r3
 1004c4c:	9c 80 03 1a 	l.addi r4,r0,0x31a
 1004c50:	d7 e2 26 a8 	l.sw 0xfffffea8(r2),r4
 1004c54:	84 82 fe a8 	l.lwz r4,0xfffffea8(r2)
 1004c58:	84 62 ff c8 	l.lwz r3,0xffffffc8(r2)
 1004c5c:	d4 03 20 00 	l.sw 0x0(r3),r4
		SD_REG(SD_ARG)=0;
 1004c60:	18 60 a0 00 	l.movhi r3,0xa000
 1004c64:	d7 e2 1f cc 	l.sw 0xffffffcc(r2),r3
 1004c68:	9c 60 00 00 	l.addi r3,r0,0x0
 1004c6c:	84 82 ff cc 	l.lwz r4,0xffffffcc(r2)
 1004c70:	d4 04 18 00 	l.sw 0x0(r4),r3
		if (!sd_wait_rsp())
 1004c74:	07 ff fe 03 	l.jal 1004480 <_sd_wait_rsp>
 1004c78:	15 00 00 00 	l.nop 0x0
 1004c7c:	d7 e2 5e a4 	l.sw 0xfffffea4(r2),r11
 1004c80:	84 82 fe a4 	l.lwz r4,0xfffffea4(r2)
 1004c84:	d7 e2 27 d0 	l.sw 0xffffffd0(r2),r4
 1004c88:	84 62 ff d0 	l.lwz r3,0xffffffd0(r2)
 1004c8c:	bc 23 00 00 	l.sfnei r3,0x0
 1004c90:	10 00 00 1d 	l.bf 1004d04 <_sd_controller_init+0x594>
 1004c94:	15 00 00 00 	l.nop 0x0
			 return dev;
 1004c98:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 1004c9c:	d7 e2 26 a0 	l.sw 0xfffffea0(r2),r4
 1004ca0:	84 82 fe a0 	l.lwz r4,0xfffffea0(r2)
 1004ca4:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004ca8:	d4 03 20 00 	l.sw 0x0(r3),r4
 1004cac:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004cb0:	d7 e2 1e 9c 	l.sw 0xfffffe9c(r2),r3
 1004cb4:	84 62 fe 9c 	l.lwz r3,0xfffffe9c(r2)
 1004cb8:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004cbc:	d4 04 18 04 	l.sw 0x4(r4),r3
 1004cc0:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 1004cc4:	d7 e2 26 98 	l.sw 0xfffffe98(r2),r4
 1004cc8:	84 82 fe 98 	l.lwz r4,0xfffffe98(r2)
 1004ccc:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004cd0:	d4 03 20 08 	l.sw 0x8(r3),r4
 1004cd4:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1004cd8:	d7 e2 1e 94 	l.sw 0xfffffe94(r2),r3
 1004cdc:	84 62 fe 94 	l.lwz r3,0xfffffe94(r2)
 1004ce0:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004ce4:	d4 04 18 0c 	l.sw 0xc(r4),r3
 1004ce8:	84 82 ff fc 	l.lwz r4,0xfffffffc(r2)
 1004cec:	d7 e2 26 90 	l.sw 0xfffffe90(r2),r4
 1004cf0:	84 82 fe 90 	l.lwz r4,0xfffffe90(r2)
 1004cf4:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004cf8:	d4 03 20 10 	l.sw 0x10(r3),r4
 1004cfc:	00 00 00 33 	l.j 1004dc8 <_sd_controller_init+0x658>
 1004d00:	15 00 00 00 	l.nop 0x0
		 rtn_reg = SD_REG(SD_RESP1);
 1004d04:	18 60 a0 00 	l.movhi r3,0xa000
 1004d08:	d7 e2 1e 8c 	l.sw 0xfffffe8c(r2),r3
 1004d0c:	84 82 fe 8c 	l.lwz r4,0xfffffe8c(r2)
 1004d10:	a8 84 00 0c 	l.ori r4,r4,0xc
 1004d14:	d7 e2 27 d4 	l.sw 0xffffffd4(r2),r4
 1004d18:	84 62 ff d4 	l.lwz r3,0xffffffd4(r2)
 1004d1c:	84 63 00 00 	l.lwz r3,0x0(r3)
 1004d20:	d7 e2 1f d8 	l.sw 0xffffffd8(r2),r3
 1004d24:	84 82 ff d8 	l.lwz r4,0xffffffd8(r2)
 1004d28:	d7 e2 27 e8 	l.sw 0xffffffe8(r2),r4
		dev.rca = ((rtn_reg&RCA_RCA_MASK));
 1004d2c:	84 62 ff e8 	l.lwz r3,0xffffffe8(r2)
 1004d30:	d7 e2 1f dc 	l.sw 0xffffffdc(r2),r3
 1004d34:	18 60 ff ff 	l.movhi r3,0xffff
 1004d38:	84 82 ff dc 	l.lwz r4,0xffffffdc(r2)
 1004d3c:	e0 64 18 03 	l.and r3,r4,r3
 1004d40:	d7 e2 1f e0 	l.sw 0xffffffe0(r2),r3
 1004d44:	84 82 ff e0 	l.lwz r4,0xffffffe0(r2)
 1004d48:	d7 e2 27 ec 	l.sw 0xffffffec(r2),r4
   
	dev.Active=1;
 1004d4c:	9c 60 00 01 	l.addi r3,r0,0x1
 1004d50:	d7 e2 1e 88 	l.sw 0xfffffe88(r2),r3
 1004d54:	84 82 fe 88 	l.lwz r4,0xfffffe88(r2)
 1004d58:	db e2 26 87 	l.sb 0xfffffe87(r2),r4
 1004d5c:	8c 62 fe 87 	l.lbz r3,0xfffffe87(r2)
 1004d60:	db e2 1f f5 	l.sb 0xfffffff5(r2),r3
    return dev;
 1004d64:	84 82 ff ec 	l.lwz r4,0xffffffec(r2)
 1004d68:	d7 e2 26 80 	l.sw 0xfffffe80(r2),r4
 1004d6c:	84 82 fe 80 	l.lwz r4,0xfffffe80(r2)
 1004d70:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004d74:	d4 03 20 00 	l.sw 0x0(r3),r4
 1004d78:	84 62 ff f0 	l.lwz r3,0xfffffff0(r2)
 1004d7c:	d7 e2 1e 7c 	l.sw 0xfffffe7c(r2),r3
 1004d80:	84 62 fe 7c 	l.lwz r3,0xfffffe7c(r2)
 1004d84:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004d88:	d4 04 18 04 	l.sw 0x4(r4),r3
 1004d8c:	84 82 ff f4 	l.lwz r4,0xfffffff4(r2)
 1004d90:	d7 e2 26 78 	l.sw 0xfffffe78(r2),r4
 1004d94:	84 82 fe 78 	l.lwz r4,0xfffffe78(r2)
 1004d98:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004d9c:	d4 03 20 08 	l.sw 0x8(r3),r4
 1004da0:	84 62 ff f8 	l.lwz r3,0xfffffff8(r2)
 1004da4:	d7 e2 1e 74 	l.sw 0xfffffe74(r2),r3
 1004da8:	84 62 fe 74 	l.lwz r3,0xfffffe74(r2)
 1004dac:	84 82 ff 48 	l.lwz r4,0xffffff48(r2)
 1004db0:	d4 04 18 0c 	l.sw 0xc(r4),r3
 1004db4:	84 82 ff fc 	l.lwz r4,0xfffffffc(r2)
 1004db8:	d7 e2 26 70 	l.sw 0xfffffe70(r2),r4
 1004dbc:	84 82 fe 70 	l.lwz r4,0xfffffe70(r2)
 1004dc0:	84 62 ff 48 	l.lwz r3,0xffffff48(r2)
 1004dc4:	d4 03 20 10 	l.sw 0x10(r3),r4

}
 1004dc8:	85 62 ff 48 	l.lwz r11,0xffffff48(r2)
 1004dcc:	85 21 00 00 	l.lwz r9,0x0(r1)
 1004dd0:	84 41 00 04 	l.lwz r2,0x4(r1)
 1004dd4:	44 00 48 00 	l.jr r9
 1004dd8:	9c 21 01 98 	l.addi r1,r1,0x198
